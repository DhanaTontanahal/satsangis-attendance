[{"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\index.js":"1","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\App.js":"2","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\reportWebVitals.js":"3","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\search.js":"4","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\AutoCompleteSearchBox.js":"5","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\AutoCompleteSearchBoxLogin.js":"6","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\data\\stocks.js":"7","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Chips.js":"8"},{"size":523,"mtime":1611234742551,"results":"9","hashOfConfig":"10"},{"size":2366,"mtime":1612959175867,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1611234742552,"results":"12","hashOfConfig":"10"},{"size":12373,"mtime":1613044901527,"results":"13","hashOfConfig":"10"},{"size":8453,"mtime":1611234742568,"results":"14","hashOfConfig":"10"},{"size":8633,"mtime":1611234742557,"results":"15","hashOfConfig":"10"},{"size":159998,"mtime":1611234742562,"results":"16","hashOfConfig":"10"},{"size":1021,"mtime":1611234742570,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10tpiri",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\index.js",[],["38","39"],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\App.js",["40","41"],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\reportWebVitals.js",[],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\search.js",["42","43","44","45","46","47","48"],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\AutoCompleteSearchBox.js",["49","50"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n//import Chip from '@material-ui/core/Chip';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from './Chips'\r\n\r\nconst StyledNoSuggsDiv = styled.div`\r\n    color: #999;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n \r\n position: relative;\r\n\r\n input{\r\n  width:100%;\r\n  height:45px;\r\n  border:0px solid black;\r\n  border-radius: 0px;\r\n  padding:0px 5px 0 10px;\r\n  font-size: 0.75rem;\r\n  background: #f6f6f6;\r\n  margin:5px 5px 5px 5px;\r\n}\r\n\r\n input:focus{\r\n  outline: none !important;\r\n}\r\n\r\n button{\r\n  position:absolute;\r\n  right:-5px;\r\n  top:15px;\r\n  border: none;\r\n  background: none;\r\n}\r\n img{\r\n  border-style: none;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n\r\n`;\r\nconst StyledUl = styled.ul`\r\n\r\n  border: 1px solid #999;\r\n  border-top-width: 0;\r\n  list-style: none;\r\n  margin-top: 0;\r\n  width:100%;\r\n  overflow-y: auto;\r\n  padding-left: 0;\r\n  color:${props => props.fontColor};\r\n\r\n\r\nli {\r\n  padding: 0.5rem;\r\n  list-style-type: none;\r\n  list-style: none;\r\n}\r\n\r\n.suggestion-active,li:hover \r\n{\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  background-color: aliceblue;\r\n  border:0px solid gray;\r\n  padding:4px 4px 4px 4px;\r\n  margin:5px 5px 5px 5px;\r\n  font-weight: bold;\r\n  background-color: coral;\r\n\r\n\r\n}\r\n\r\nli:not(:last-of-type) {\r\n  border-bottom: 1px solid #999;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst defaultProps = {\r\n    placeHolderSearchLabel:\"Search\",\r\n    showSearchBtn:false,\r\n    styles: {\r\n        ulDiv:{\r\n            color:\"blue\"\r\n        },\r\n        searchImage: {\r\n            width: \"24\",\r\n            height: \"24\",\r\n            alt: \"Search\"\r\n        },\r\n        container: {\r\n            width: \"400px\",\r\n            margin: \"0 auto\"\r\n        },\r\n    }\r\n}\r\n\r\n\r\nclass AutoCompleteSearchBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filteredSuggestions: [],\r\n            activeSuggestions: 0,\r\n            showSuggestions: false,\r\n            userInput: \"\",\r\n            selectedUsers: []\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        // console.log(e)\r\n        const { suggestions, primaryIndex } = this.props;\r\n        const userSearchInput = e.target.value;\r\n\r\n        const filteredSuggestions = suggestions.filter((suggestion) => {\r\n            return (suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1);\r\n        });\r\n\r\n        // console.log(filteredSuggestions);\r\n\r\n        this.setState({\r\n            filteredSuggestions: filteredSuggestions,\r\n            activeSuggestions: 0,\r\n            showSuggestions: true,\r\n            userInput: userSearchInput\r\n        })\r\n\r\n    }\r\n\r\n    onKeyDown(e) {\r\n\r\n        const { activeSuggestions, filteredSuggestions } = this.state;\r\n\r\n        if (e.keyCode === 13) {\r\n\r\n            this.setState({\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\r\n            })\r\n\r\n            this.props.onClick(filteredSuggestions[activeSuggestions]);\r\n        }\r\n        //user has clicked down arrow\r\n        else if (e.keyCode == 40) {\r\n\r\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\r\n        }\r\n        //user has clicked up arrow\r\n        else if (e.keyCode == 38) {\r\n            if (activeSuggestions === 0) {\r\n                return;\r\n            }\r\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onClick(e) {\r\n        if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\r\n            this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\r\n        }\r\n        console.log('user input list')\r\n        console.log(this.state.selectedUsers)\r\n        this.setState({\r\n            userInput: \"\"\r\n        })\r\n        this.props.onClick(this.state.selectedUsers);\r\n    }\r\n\r\n    onDelete(user) {\r\n        const index = this.state.selectedUsers.indexOf(user);\r\n        if (index > -1) {\r\n            this.state.selectedUsers.splice(index, 1)\r\n            console.log('after delete')\r\n            console.log(this.state.selectedUsers)\r\n            this.setState({\r\n                userInput: \"\"\r\n            })\r\n          }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                filteredSuggestions,\r\n                activeSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\r\n\r\n        let autoCompleteSuggestions;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                autoCompleteSuggestions = (\r\n                    <StyledUl fontColor={styles.ulDiv.color}>\r\n                        {\r\n                            filteredSuggestions.map((suggestion, index) => {\r\n\r\n                                let className;\r\n\r\n                                if (index === activeSuggestions) {\r\n                                    className = \"suggestion-active\";\r\n                                }\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={className}\r\n                                        key={index}\r\n                                        onClick={this.onClick}\r\n                                        data-id={index}\r\n                                        >\r\n                                        {suggestion[primaryIndex]}\r\n                                        \r\n                                        \r\n                                        <br />\r\n                                        <span>\r\n                                            {\r\n                                                this.props.showSecondarySearchCriterion ?\r\n                                                    <small>{suggestion[secondaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                this.props.showTertiarySearchCriterion ?\r\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                        </span>\r\n\r\n                                    </li>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </StyledUl>\r\n                )\r\n            }\r\n            else\r\n            {\r\n               \r\n                    autoCompleteSuggestions = (\r\n                        <StyledNoSuggsDiv>\r\n                          <em>No suggestions, you're on your own!</em>\r\n                        </StyledNoSuggsDiv>\r\n                      );\r\n                \r\n            }\r\n        }\r\n        return (\r\n\r\n            <div style={styles.container}>\r\n                <StyledContainer>\r\n                <div>\r\n                    {this.state.selectedUsers.map((user, index) => (\r\n                        <Chip \r\n                            label={user.nameSatsangi}\r\n                            onDelete={() => this.onDelete(user)}\r\n                        />\r\n                    ))}          \r\n                    </div>\r\n                    <input\r\n                        placeholder={this.props.placeHolderSearchLabel}\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyDown}\r\n                        value={userInput}\r\n                    />\r\n\r\n                    \r\n                </StyledContainer>\r\n                {autoCompleteSuggestions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAutoCompleteSearchBox.defaultProps = defaultProps;\r\nexport default AutoCompleteSearchBox\r\n","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\AutoCompleteSearchBoxLogin.js",["51","52","53","54"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n//import Chip from '@material-ui/core/Chip';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst StyledNoSuggsDiv = styled.div`\r\n    color: #999;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n \r\n position: relative;\r\n\r\n input{\r\n  width:100%;\r\n  height:45px;\r\n  border:0px solid black;\r\n  border-radius: 0px;\r\n  padding:0px 5px 0 10px;\r\n  font-size: 0.75rem;\r\n  background: #f6f6f6;\r\n  margin:5px 5px 5px 5px;\r\n}\r\n\r\n input:focus{\r\n  outline: none !important;\r\n}\r\n\r\n button{\r\n  position:absolute;\r\n  right:-5px;\r\n  top:15px;\r\n  border: none;\r\n  background: none;\r\n}\r\n img{\r\n  border-style: none;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n\r\n`;\r\nconst StyledUl = styled.ul`\r\n\r\n  border: 1px solid #999;\r\n  border-top-width: 0;\r\n  list-style: none;\r\n  margin-top: 0;\r\n  width:100%;\r\n  overflow-y: auto;\r\n  padding-left: 0;\r\n  color:${props => props.fontColor};\r\n\r\n\r\nli {\r\n  padding: 0.5rem;\r\n  list-style-type: none;\r\n  list-style: none;\r\n}\r\n\r\n.suggestion-active,li:hover \r\n{\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  background-color: aliceblue;\r\n  border:0px solid gray;\r\n  padding:4px 4px 4px 4px;\r\n  margin:5px 5px 5px 5px;\r\n  font-weight: bold;\r\n  background-color: coral;\r\n\r\n\r\n}\r\n\r\nli:not(:last-of-type) {\r\n  border-bottom: 1px solid #999;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst defaultProps = {\r\n    placeHolderSearchLabel:\"Search\",\r\n    showSearchBtn:false,\r\n    styles: {\r\n        ulDiv:{\r\n            color:\"blue\"\r\n        },\r\n        searchImage: {\r\n            width: \"24\",\r\n            height: \"24\",\r\n            alt: \"Search\"\r\n        },\r\n        container: {\r\n            width: \"400px\",\r\n            margin: \"0 auto\"\r\n        },\r\n    }\r\n}\r\n\r\n\r\nclass AutoCompleteSearchBoxLogin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filteredSuggestions: [],\r\n            activeSuggestions: 0,\r\n            showSuggestions: false,\r\n            userInput: \"\",\r\n            selectedUsers: null\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        // console.log(e)\r\n        const { suggestions, primaryIndex, secondaryIndex, tertiaryIndex } = this.props;\r\n        const userSearchInput = e.target.value;\r\n\r\n        const filteredSuggestions = suggestions.filter((suggestion) => {\r\n            return ((suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1) ||\r\n            ((suggestion[secondaryIndex]) && (suggestion[secondaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)) ||\r\n            ((suggestion[tertiaryIndex]) && (suggestion[tertiaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)));\r\n        });\r\n\r\n        // console.log(filteredSuggestions);\r\n\r\n        this.setState({\r\n            filteredSuggestions: filteredSuggestions,\r\n            activeSuggestions: 0,\r\n            showSuggestions: true,\r\n            userInput: userSearchInput\r\n        })\r\n\r\n    }\r\n\r\n    onKeyDown(e) {\r\n\r\n        const { activeSuggestions, filteredSuggestions } = this.state;\r\n\r\n        if (e.keyCode === 13) {\r\n\r\n            this.state.selectedUsers = filteredSuggestions[activeSuggestions]\r\n            this.setState({\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestions][this.props.secondaryIndex],\r\n                // selectedUsers: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\r\n            })\r\n            console.log(this.state.selectedUsers)\r\n            this.props.onClick(this.state.selectedUsers);\r\n        }\r\n        //user has clicked down arrow\r\n        else if (e.keyCode == 40) {\r\n\r\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\r\n        }\r\n        //user has clicked up arrow\r\n        else if (e.keyCode == 38) {\r\n            if (activeSuggestions === 0) {\r\n                return;\r\n            }\r\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\r\n        }\r\n    }\r\n\r\n    onClick(e) {\r\n        this.state.selectedUsers = this.state.filteredSuggestions[e.currentTarget.dataset.id]\r\n        // if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\r\n        //     this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\r\n        // }\r\n        // console.log('user input list')\r\n        // console.log(this.state.selectedUsers)\r\n        this.setState({\r\n            userInput: this.state.filteredSuggestions[e.currentTarget.dataset.id][this.props.secondaryIndex],\r\n            showSuggestions: false\r\n        })\r\n        console.log(this.state)\r\n        this.props.onClick(this.state.selectedUsers);\r\n    }\r\n\r\n    onDelete(user) {\r\n        this.setState({\r\n            userInput: \"\",\r\n            selectedUsers: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                filteredSuggestions,\r\n                activeSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\r\n\r\n        let autoCompleteSuggestions;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                autoCompleteSuggestions = (\r\n                    <StyledUl fontColor={styles.ulDiv.color}>\r\n                        {\r\n                            filteredSuggestions.map((suggestion, index) => {\r\n\r\n                                let className;\r\n\r\n                                if (index === activeSuggestions) {\r\n                                    className = \"suggestion-active\";\r\n                                }\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={className}\r\n                                        key={index}\r\n                                        onClick={this.onClick}\r\n                                        data-id={index}\r\n                                        >\r\n                                        {suggestion[primaryIndex]}\r\n                                        \r\n                                        \r\n                                        <br />\r\n                                        <span>\r\n                                            {\r\n                                                this.props.showSecondarySearchCriterion ?\r\n                                                    <small>{suggestion[secondaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                this.props.showTertiarySearchCriterion ?\r\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                        </span>\r\n\r\n                                    </li>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </StyledUl>\r\n                )\r\n            }\r\n            else\r\n            {\r\n               \r\n                    autoCompleteSuggestions = (\r\n                        <StyledNoSuggsDiv>\r\n                          <em>No suggestions, you're on your own!</em>\r\n                        </StyledNoSuggsDiv>\r\n                      );\r\n                \r\n            }\r\n        }\r\n        return (\r\n\r\n            <div style={styles.container}>\r\n                <StyledContainer>\r\n                    <input\r\n                        placeholder={this.props.placeHolderSearchLabel}\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyDown}\r\n                        value={userInput}\r\n                    />\r\n                </StyledContainer>\r\n                {autoCompleteSuggestions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAutoCompleteSearchBoxLogin.defaultProps = defaultProps;\r\nexport default AutoCompleteSearchBoxLogin\r\n","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\data\\stocks.js",[],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Chips.js",["55","56","57","58"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { HighlightOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px\",\r\n    color: \"black\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Chips(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = () => {\r\n    if (props.onDelete) {\r\n      props.onDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label={props.label || \"\"} onDelete={() => handleDelete()} />\r\n    </div>\r\n  );\r\n}\r\n/*\r\n<Chip iconColorPrimary=\"secondary\" deleteIcon={<HighlightOff/>} label=\"Delete\" onDelete={handleDelete} color=\"secondary\" />*/\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":12},{"ruleId":"63","severity":1,"message":"67","line":5,"column":10,"nodeType":"65","messageId":"66","endLine":5,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"69","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":37},{"ruleId":"63","severity":1,"message":"70","line":1,"column":39,"nodeType":"65","messageId":"66","endLine":1,"endColumn":47},{"ruleId":"63","severity":1,"message":"71","line":6,"column":10,"nodeType":"65","messageId":"66","endLine":6,"endColumn":20},{"ruleId":"63","severity":1,"message":"72","line":8,"column":10,"nodeType":"65","messageId":"66","endLine":8,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":149,"column":45,"nodeType":"75","messageId":"76","endLine":149,"endColumn":47},{"ruleId":"73","severity":1,"message":"74","line":264,"column":26,"nodeType":"75","messageId":"76","endLine":264,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":158,"column":28,"nodeType":"75","messageId":"76","endLine":158,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":167,"column":28,"nodeType":"75","messageId":"76","endLine":167,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":152,"column":13,"nodeType":"79","endLine":152,"endColumn":23},{"ruleId":"73","severity":1,"message":"74","line":162,"column":28,"nodeType":"75","messageId":"76","endLine":162,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":171,"column":28,"nodeType":"75","messageId":"76","endLine":171,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":180,"column":9,"nodeType":"79","endLine":180,"endColumn":19},{"ruleId":"63","severity":1,"message":"80","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":14},{"ruleId":"63","severity":1,"message":"81","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":16},{"ruleId":"63","severity":1,"message":"82","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":16},{"ruleId":"63","severity":1,"message":"83","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":22},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useTranslation' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'stocksData' is defined but never used.","'ThemeProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'HighlightOff' is defined but never used.","no-global-assign","no-unsafe-negation"]