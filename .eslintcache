[{"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/index.js":"1","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/App.js":"2","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/reportWebVitals.js":"3","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/search.js":"4","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/data/stocks.js":"5","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/AutoCompleteSearchBox.js":"6","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Chips.js":"7","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/sign_in/sign_in.js":"8","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/sign_in/AutoCompleteSearchBox.js":"9"},{"size":505,"mtime":1610384709542,"results":"10","hashOfConfig":"11"},{"size":748,"mtime":1610884642499,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610384709545,"results":"13","hashOfConfig":"11"},{"size":6160,"mtime":1610955186642,"results":"14","hashOfConfig":"11"},{"size":153581,"mtime":1610384709549,"results":"15","hashOfConfig":"11"},{"size":8151,"mtime":1610384709555,"results":"16","hashOfConfig":"11"},{"size":983,"mtime":1610384709556,"results":"17","hashOfConfig":"11"},{"size":4816,"mtime":1611051509609,"results":"18","hashOfConfig":"11"},{"size":8327,"mtime":1610956687375,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nf7geq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/index.js",[],["45","46"],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/App.js",["47","48"],"import logo from './logo.svg';\nimport './App.css';\nimport SearchBar from './search_bar/search';\nimport SignIn from './sign_in/sign_in';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n        <SignIn/>\n    </div>\n  );\n\n  \n\n\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <cohde>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/reportWebVitals.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/search.js",["49","50","51","52","53"],"import React, { Component, useEffect, useState } from 'react';\nimport search from './search.svg';\nimport './App.css';\nimport AutoCompleteSearchBox from './src/AutoCompleteSearchBox';\nimport { stocksData } from './data/stocks'\nimport firebase from \"firebase/app\";\nimport { ThemeProvider } from 'styled-components';\nimport styled from \"styled-components\";\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nrequire('firebase/auth');\nrequire('firebase/database');\n\n\nconst DropDownContainer = styled(\"div\")`\n  width: 20em;\n  margin: 0 auto;\n  align: centre;\n`;\n\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 200;\n  font-size: 1.3rem;\n  color: #000000;\n  background: #f6f6f6;\n`;\n\nconst DropDownListContainer = styled(\"div\")``;\n\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #f6f6f6;\n  border: 1px solid #000000;\n  box-sizing: border-box;\n  color: #000000;\n  font-size: 1rem;\n  font-weight: 150;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n`;\n\n\nconst button = {\n  color: \"#00008E\",\n  backgroundColor: \"#f6f6f6\",\n  padding: \"10px\",\n  fontFamily: \"Arial\"\n};\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCbRXOuEbKdDD0YBZcQJAnYb6ghRp0hH04\",\n  authDomain: \"demoattendance-7d80c.firebaseapp.com\",\n  databaseURL: \"https://demoattendance-7d80c-default-rtdb.firebaseio.com\",\n  projectId: \"demoattendance-7d80c\",\n  storageBucket: \"demoattendance-7d80c.appspot.com\",\n  messagingSenderId: \"17274395407\",\n  appId: \"1:17274395407:web:2d5e1f13ebcd16a60dbc7a\",\n  measurementId: \"G-10ZR1ZYQX4\"\n\n};\n\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n      selectedUsers: [],\n      selectedDate: new Date(),\n      eventList: [],\n      isOpen: false,\n      selectedEvent: null\n    };\n    this.submitAttendance = this.submitAttendance.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  submitAttendance() {\n    if(this.state.selectedEvent == null)\n    {\n      alert(\"Please select a valid event\")\n      return\n    }\n    console.log(this.state.selectedDate, this.state.selectedEvent, this.state.selectedUsers)\n    \n    // Initialize Firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }else {\n      firebase.app(); // if already initialized, use that one\n    }\n    const attendanceDate = (\"0\" + this.state.selectedDate.getDate()).slice(-2) + \"-\" + this.state.selectedDate.toLocaleString('default', { month: 'long' }) + \"-\" + this.state.selectedDate.getFullYear()\n    // console.log(attendanceDate)\n    this.state.selectedUsers.forEach((user) => {\n      firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + user.newUID).set(user)  \n    })\n    // firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + this.state.sele)\n    console.log(\"attendance submitted\")\n    window.location.reload();\n  }\n\n  fetchData = async () => {\n\n    // Initialize Firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n    const users = await firebase.database().ref('/satsangiUsers/').once('value').then((snapshot) => {\n      return snapshot.val()\n    })\n    this.setState({\n      userData: users\n    });\n\n    const eventListFromFirebase = await firebase.database().ref('/activities/').once('value').then((snapshot) => {\n      return snapshot.val()\n    })\n    this.setState({\n      eventList: Object.keys(eventListFromFirebase)\n    });\n  }\n  render() {\n    const onClick = (selectedUsers) => {\n      this.setState({ selectedUsers: selectedUsers })\n    }\n    console.log(this.state.userData)\n    const toggling = () => this.setState({ isOpen: !this.state.isOpen });\n\n    const onOptionClicked = (value) => () => {\n      this.setState({ selectedEvent: value });\n      this.setState({ isOpen: false })\n      console.log(this.state.selectedEvent);\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>Satsangis Attendance </h1>\n        <div>\n          <h3>Choose date</h3>\n          <DatePicker\n            selected={this.state.selectedDate}\n            onChange={date => this.setState({ selectedDate: date })}\n            dateFormat='dd/MM/yyyy'\n          />\n        </div>\n        <div>\n          <h3>Choose event</h3>\n          <DropDownContainer>\n            <DropDownHeader onClick={toggling}>\n              {this.state.selectedEvent || \"Event\"}\n            </DropDownHeader>\n            {this.state.isOpen && (\n              <DropDownListContainer>\n                <DropDownList>\n                  {this.state.eventList.map((event) => (\n                    <ListItem onClick={onOptionClicked(event)} key={Math.random()}>\n                      {event}\n                    </ListItem>\n                  ))}\n                </DropDownList>\n              </DropDownListContainer>\n            )}\n          </DropDownContainer>\n        </div>\n        <div>\n          <h3>Choose user</h3>\n          <AutoCompleteSearchBox \n            placeHolderSearchLabel={\"Search..\"}\n            primaryIndex={\"nameSatsangi\"}\n            secondaryIndex={\"newUID\"}\n            showSecondarySearchCriterion={true}\n            secondarySearchClassName=\"secondarySearchClassName\"\n            tertiaryIndex={\"branchCode\"}\n            showTertiarySearchCriterion={true}\n            tertiarySearchClassName=\"tertiarySearchClassName\"\n            suggestions={Object.values(this.state.userData)}\n            onClick={onClick}\n            showSearchBtn={true}\n            searchImg={search}\n          />\n        </div>\n\n        <div>\n          <br></br>\n          <button onClick={this.submitAttendance} style = {button}>\n            Submit Attendance\n          </button>\n        </div>\n      </div>\n\n    );\n\n  }\n}\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/data/stocks.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/AutoCompleteSearchBox.js",["54","55"],"import React, { Component } from 'react'\nimport styled from 'styled-components';\n//import Chip from '@material-ui/core/Chip';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Chip from './Chips'\n\nconst StyledNoSuggsDiv = styled.div`\n    color: #999;\n    padding: 0.5rem;\n`;\n\nconst StyledContainer = styled.div`\n \n position: relative;\n\n input{\n  width:100%;\n  height:45px;\n  border:0px solid black;\n  border-radius: 0px;\n  padding:0px 5px 0 10px;\n  font-size: 0.75rem;\n  background: #f6f6f6;\n  margin:5px 5px 5px 5px;\n}\n\n input:focus{\n  outline: none !important;\n}\n\n button{\n  position:absolute;\n  right:-5px;\n  top:15px;\n  border: none;\n  background: none;\n}\n img{\n  border-style: none;\n  vertical-align: middle;\n}\n\n\n\n`;\nconst StyledUl = styled.ul`\n\n  border: 1px solid #999;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  width:100%;\n  overflow-y: auto;\n  padding-left: 0;\n  color:${props => props.fontColor};\n\n\nli {\n  padding: 0.5rem;\n  list-style-type: none;\n  list-style: none;\n}\n\n.suggestion-active,li:hover \n{\n  cursor: pointer;\n  font-weight: 700;\n  background-color: aliceblue;\n  border:0px solid gray;\n  padding:4px 4px 4px 4px;\n  margin:5px 5px 5px 5px;\n  font-weight: bold;\n  background-color: coral;\n\n\n}\n\nli:not(:last-of-type) {\n  border-bottom: 1px solid #999;\n}\n\n`;\n\n\nconst defaultProps = {\n    placeHolderSearchLabel:\"Search\",\n    showSearchBtn:false,\n    styles: {\n        ulDiv:{\n            color:\"blue\"\n        },\n        searchImage: {\n            width: \"24\",\n            height: \"24\",\n            alt: \"Search\"\n        },\n        container: {\n            width: \"400px\",\n            margin: \"0 auto\"\n        },\n    }\n}\n\n\nclass AutoCompleteSearchBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            filteredSuggestions: [],\n            activeSuggestions: 0,\n            showSuggestions: false,\n            userInput: \"\",\n            selectedUsers: []\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n    }\n\n\n    onChange(e){\n        // console.log(e)\n        const { suggestions, primaryIndex } = this.props;\n        const userSearchInput = e.target.value;\n\n        const filteredSuggestions = suggestions.filter((suggestion) => {\n            return (suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1);\n        });\n\n        // console.log(filteredSuggestions);\n\n        this.setState({\n            filteredSuggestions: filteredSuggestions,\n            activeSuggestions: 0,\n            showSuggestions: true,\n            userInput: userSearchInput\n        })\n\n    }\n\n    onKeyDown(e) {\n\n        const { activeSuggestions, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n\n            this.setState({\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\n            })\n\n            this.props.onClick(filteredSuggestions[activeSuggestions]);\n        }\n        //user has clicked down arrow\n        else if (e.keyCode == 40) {\n\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\n        }\n        //user has clicked up arrow\n        else if (e.keyCode == 38) {\n            if (activeSuggestions === 0) {\n                return;\n            }\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\n        }\n\n\n\n    }\n\n    onClick(e) {\n        if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\n            this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\n        }\n        console.log('user input list')\n        console.log(this.state.selectedUsers)\n        this.setState({\n            userInput: \"\"\n        })\n        this.props.onClick(this.state.selectedUsers);\n    }\n\n    onDelete(user) {\n        const index = this.state.selectedUsers.indexOf(user);\n        if (index > -1) {\n            this.state.selectedUsers.splice(index, 1)\n            console.log('after delete')\n            console.log(this.state.selectedUsers)\n            this.setState({\n                userInput: \"\"\n            })\n          }\n    }\n\n    render() {\n\n        const {\n            state: {\n                filteredSuggestions,\n                activeSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\n\n        let autoCompleteSuggestions;\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                autoCompleteSuggestions = (\n                    <StyledUl fontColor={styles.ulDiv.color}>\n                        {\n                            filteredSuggestions.map((suggestion, index) => {\n\n                                let className;\n\n                                if (index === activeSuggestions) {\n                                    className = \"suggestion-active\";\n                                }\n\n                                return (\n                                    <li\n                                        className={className}\n                                        key={index}\n                                        onClick={this.onClick}\n                                        data-id={index}\n                                        >\n                                        {suggestion[primaryIndex]}\n                                        \n                                        \n                                        <br />\n                                        <span>\n                                            {\n                                                this.props.showSecondarySearchCriterion ?\n                                                    <small>{suggestion[secondaryIndex]}</small> :\n                                                    null\n                                            }\n                                            {\n                                                this.props.showTertiarySearchCriterion ?\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\n                                                    null\n                                            }\n                                        </span>\n\n                                    </li>\n                                )\n                            })\n\n                        }\n                    </StyledUl>\n                )\n            }\n            else\n            {\n               \n                    autoCompleteSuggestions = (\n                        <StyledNoSuggsDiv>\n                          <em>No suggestions, you're on your own!</em>\n                        </StyledNoSuggsDiv>\n                      );\n                \n            }\n        }\n        return (\n\n            <div style={styles.container}>\n                <StyledContainer>\n                <div>\n                    {this.state.selectedUsers.map((user, index) => (\n                        <Chip \n                            label={user.nameSatsangi}\n                            onDelete={() => this.onDelete(user)}\n                        />\n                    ))}          \n                    </div>\n                    <input\n                        placeholder={this.props.placeHolderSearchLabel}\n                        type=\"text\"\n                        onChange={this.onChange}\n                        onKeyDown={this.onKeyDown}\n                        value={userInput}\n                    />\n\n                    \n                </StyledContainer>\n                {autoCompleteSuggestions}\n            </div>\n        )\n    }\n}\n\nAutoCompleteSearchBox.defaultProps = defaultProps;\nexport default AutoCompleteSearchBox\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Chips.js",["56","57","58","59"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { HighlightOff } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px\",\n    color: \"black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Chips(props) {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    if (props.onDelete) {\n      props.onDelete();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Chip label={props.label || \"\"} onDelete={() => handleDelete()} />\n    </div>\n  );\n}\n/*\n<Chip iconColorPrimary=\"secondary\" deleteIcon={<HighlightOff/>} label=\"Delete\" onDelete={handleDelete} color=\"secondary\" />*/\n",["60","61"],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/sign_in/sign_in.js",["62","63","64","65","66","67","68","69","70","71"],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/sign_in/AutoCompleteSearchBox.js",["72","73","74","75"],"import React, { Component } from 'react'\nimport styled from 'styled-components';\n//import Chip from '@material-ui/core/Chip';\n// import { makeStyles } from '@material-ui/core/styles';\n\n\nconst StyledNoSuggsDiv = styled.div`\n    color: #999;\n    padding: 0.5rem;\n`;\n\nconst StyledContainer = styled.div`\n \n position: relative;\n\n input{\n  width:100%;\n  height:45px;\n  border:0px solid black;\n  border-radius: 0px;\n  padding:0px 5px 0 10px;\n  font-size: 0.75rem;\n  background: #f6f6f6;\n  margin:5px 5px 5px 5px;\n}\n\n input:focus{\n  outline: none !important;\n}\n\n button{\n  position:absolute;\n  right:-5px;\n  top:15px;\n  border: none;\n  background: none;\n}\n img{\n  border-style: none;\n  vertical-align: middle;\n}\n\n\n\n`;\nconst StyledUl = styled.ul`\n\n  border: 1px solid #999;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  width:100%;\n  overflow-y: auto;\n  padding-left: 0;\n  color:${props => props.fontColor};\n\n\nli {\n  padding: 0.5rem;\n  list-style-type: none;\n  list-style: none;\n}\n\n.suggestion-active,li:hover \n{\n  cursor: pointer;\n  font-weight: 700;\n  background-color: aliceblue;\n  border:0px solid gray;\n  padding:4px 4px 4px 4px;\n  margin:5px 5px 5px 5px;\n  font-weight: bold;\n  background-color: coral;\n\n\n}\n\nli:not(:last-of-type) {\n  border-bottom: 1px solid #999;\n}\n\n`;\n\n\nconst defaultProps = {\n    placeHolderSearchLabel:\"Search\",\n    showSearchBtn:false,\n    styles: {\n        ulDiv:{\n            color:\"blue\"\n        },\n        searchImage: {\n            width: \"24\",\n            height: \"24\",\n            alt: \"Search\"\n        },\n        container: {\n            width: \"400px\",\n            margin: \"0 auto\"\n        },\n    }\n}\n\n\nclass AutoCompleteSearchBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            filteredSuggestions: [],\n            activeSuggestions: 0,\n            showSuggestions: false,\n            userInput: \"\",\n            selectedUsers: null\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n    }\n\n\n    onChange(e){\n        // console.log(e)\n        const { suggestions, primaryIndex, secondaryIndex, tertiaryIndex } = this.props;\n        const userSearchInput = e.target.value;\n\n        const filteredSuggestions = suggestions.filter((suggestion) => {\n            return ((suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1) ||\n            ((suggestion[secondaryIndex]) && (suggestion[secondaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)) ||\n            ((suggestion[tertiaryIndex]) && (suggestion[tertiaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)));\n        });\n\n        // console.log(filteredSuggestions);\n\n        this.setState({\n            filteredSuggestions: filteredSuggestions,\n            activeSuggestions: 0,\n            showSuggestions: true,\n            userInput: userSearchInput\n        })\n\n    }\n\n    onKeyDown(e) {\n\n        const { activeSuggestions, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n\n            this.state.selectedUsers = filteredSuggestions[activeSuggestions]\n            this.setState({\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestions][this.props.secondaryIndex],\n                // selectedUsers: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\n            })\n            console.log(this.state.selectedUsers)\n            this.props.onClick(this.state.selectedUsers);\n        }\n        //user has clicked down arrow\n        else if (e.keyCode == 40) {\n\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\n        }\n        //user has clicked up arrow\n        else if (e.keyCode == 38) {\n            if (activeSuggestions === 0) {\n                return;\n            }\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\n        }\n    }\n\n    onClick(e) {\n        this.state.selectedUsers = this.state.filteredSuggestions[e.currentTarget.dataset.id]\n        // if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\n        //     this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\n        // }\n        // console.log('user input list')\n        // console.log(this.state.selectedUsers)\n        this.setState({\n            userInput: this.state.filteredSuggestions[e.currentTarget.dataset.id][this.props.secondaryIndex],\n            showSuggestions: false\n        })\n        console.log(this.state)\n        this.props.onClick(this.state.selectedUsers);\n    }\n\n    onDelete(user) {\n        this.setState({\n            userInput: \"\",\n            selectedUsers: null\n        })\n    }\n\n    render() {\n\n        const {\n            state: {\n                filteredSuggestions,\n                activeSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\n\n        let autoCompleteSuggestions;\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                autoCompleteSuggestions = (\n                    <StyledUl fontColor={styles.ulDiv.color}>\n                        {\n                            filteredSuggestions.map((suggestion, index) => {\n\n                                let className;\n\n                                if (index === activeSuggestions) {\n                                    className = \"suggestion-active\";\n                                }\n\n                                return (\n                                    <li\n                                        className={className}\n                                        key={index}\n                                        onClick={this.onClick}\n                                        data-id={index}\n                                        >\n                                        {suggestion[primaryIndex]}\n                                        \n                                        \n                                        <br />\n                                        <span>\n                                            {\n                                                this.props.showSecondarySearchCriterion ?\n                                                    <small>{suggestion[secondaryIndex]}</small> :\n                                                    null\n                                            }\n                                            {\n                                                this.props.showTertiarySearchCriterion ?\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\n                                                    null\n                                            }\n                                        </span>\n\n                                    </li>\n                                )\n                            })\n\n                        }\n                    </StyledUl>\n                )\n            }\n            else\n            {\n               \n                    autoCompleteSuggestions = (\n                        <StyledNoSuggsDiv>\n                          <em>No suggestions, you're on your own!</em>\n                        </StyledNoSuggsDiv>\n                      );\n                \n            }\n        }\n        return (\n\n            <div style={styles.container}>\n                <StyledContainer>\n                    <input\n                        placeholder={this.props.placeHolderSearchLabel}\n                        type=\"text\"\n                        onChange={this.onChange}\n                        onKeyDown={this.onKeyDown}\n                        value={userInput}\n                    />\n                </StyledContainer>\n                {autoCompleteSuggestions}\n            </div>\n        )\n    }\n}\n\nAutoCompleteSearchBox.defaultProps = defaultProps;\nexport default AutoCompleteSearchBox\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":12},{"ruleId":"80","severity":1,"message":"84","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":17},{"ruleId":"80","severity":1,"message":"85","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"86","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":37},{"ruleId":"80","severity":1,"message":"87","line":1,"column":39,"nodeType":"82","messageId":"83","endLine":1,"endColumn":47},{"ruleId":"80","severity":1,"message":"88","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":20},{"ruleId":"80","severity":1,"message":"89","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":158,"column":28,"nodeType":"92","messageId":"93","endLine":158,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":167,"column":28,"nodeType":"92","messageId":"93","endLine":167,"endColumn":30},{"ruleId":"80","severity":1,"message":"94","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"95","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":16},{"ruleId":"80","severity":1,"message":"96","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":16},{"ruleId":"80","severity":1,"message":"97","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":22},{"ruleId":"76","replacedBy":"98"},{"ruleId":"78","replacedBy":"99"},{"ruleId":"80","severity":1,"message":"85","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"86","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":37},{"ruleId":"80","severity":1,"message":"87","line":1,"column":39,"nodeType":"82","messageId":"83","endLine":1,"endColumn":47},{"ruleId":"80","severity":1,"message":"89","line":7,"column":10,"nodeType":"82","messageId":"83","endLine":7,"endColumn":23},{"ruleId":"80","severity":1,"message":"100","line":17,"column":7,"nodeType":"82","messageId":"83","endLine":17,"endColumn":24},{"ruleId":"80","severity":1,"message":"101","line":23,"column":7,"nodeType":"82","messageId":"83","endLine":23,"endColumn":21},{"ruleId":"80","severity":1,"message":"102","line":33,"column":7,"nodeType":"82","messageId":"83","endLine":33,"endColumn":28},{"ruleId":"80","severity":1,"message":"103","line":35,"column":7,"nodeType":"82","messageId":"83","endLine":35,"endColumn":19},{"ruleId":"80","severity":1,"message":"104","line":50,"column":7,"nodeType":"82","messageId":"83","endLine":50,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":142,"column":25,"nodeType":"92","messageId":"93","endLine":142,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":152,"column":13,"nodeType":"107","endLine":152,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":162,"column":28,"nodeType":"92","messageId":"93","endLine":162,"endColumn":30},{"ruleId":"90","severity":1,"message":"91","line":171,"column":28,"nodeType":"92","messageId":"93","endLine":171,"endColumn":30},{"ruleId":"105","severity":1,"message":"106","line":180,"column":9,"nodeType":"107","endLine":180,"endColumn":19},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SearchBar' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'stocksData' is defined but never used.","'ThemeProvider' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'HighlightOff' is defined but never used.",["108"],["109"],"'DropDownContainer' is assigned a value but never used.","'DropDownHeader' is assigned a value but never used.","'DropDownListContainer' is assigned a value but never used.","'DropDownList' is assigned a value but never used.","'ListItem' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]