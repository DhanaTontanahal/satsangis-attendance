[{"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/index.js":"1","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/App.js":"2","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/reportWebVitals.js":"3","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/search.js":"4","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/AutoCompleteSearchBoxLogin.js":"5","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/AutoCompleteSearchBox.js":"6","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/data/stocks.js":"7","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/BarcodeScanner.js":"8","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Chips.js":"9","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Scanner.js":"10","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/qr-scanner.js":"11"},{"size":505,"mtime":1610384709542,"results":"12","hashOfConfig":"13"},{"size":2687,"mtime":1616518333110,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610384709545,"results":"15","hashOfConfig":"13"},{"size":19439,"mtime":1620549857677,"results":"16","hashOfConfig":"13"},{"size":8350,"mtime":1616432952310,"results":"17","hashOfConfig":"13"},{"size":9328,"mtime":1620572415802,"results":"18","hashOfConfig":"13"},{"size":153581,"mtime":1610384709549,"results":"19","hashOfConfig":"13"},{"size":1111,"mtime":1619883520968,"results":"20","hashOfConfig":"13"},{"size":983,"mtime":1610384709556,"results":"21","hashOfConfig":"13"},{"size":1950,"mtime":1619882020149,"results":"22","hashOfConfig":"13"},{"size":1368,"mtime":1620572927461,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nf7geq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/index.js",[],["53","54"],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/App.js",["55","56"],"import logo from './logo.svg';\nimport './App.css';\nimport SearchBar from './search_bar/search';\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: {\n        translation: {\n          \"Satsangis_Attendance\": \"Satsangis Attendance\",\n          \"Choose_date\":\"Date\",\n          \"Choose_event\":\"Choose Event\",\n          \"Choose_user\":\"Enter Names\",\n          \"Submit_Attendance\":\"Submit Attendance\",\n          \"submit_message\":\"Radhasoami \\nYour attendance is marked!\",\n          \"Choose_Year_of_Birth\":\"Choose Year of Birth\",\n          \"Choose_UID\":\"Choose UID\",\n          \"Login\":\"Login\",\n          \"Radhasoami\":\"Radhasoami\",\n          \"Choose_day_time\": \"Choose Daytime\",\n          \"Total_attendees\": \"Total attendees\",\n          \"Example\":\"Example\"\n        }\n      },\n      hi: {\n        translation: {\n          \"Satsangis_Attendance\": \"सत्संगियों की उपस्थिति\",\n          \"Choose_date\":\"तिथि\",\n          \"Choose_event\":\"ईवेंट चुनें\",\n          \"Choose_user\":\"सत्संगियों का नाम चुनें\",\n          \"Submit_Attendance\":\"उपस्थिति दर्ज करें\",\n          \"submit_message\":\"राधास्वामी \\nआपकी attendance लग गई है।\",\n          \"Choose_Year_of_Birth\":\"जन्म का वर्ष चुनें\",\n          \"Choose_UID\":\"UID चुनें\",\n          \"Login\":\"लॉग इन करें\",\n          \"Radhasoami\":\"राधास्वामी\",\n          \"Choose_day_time\": \"दिन का समय चुनें\",\n          \"Total_attendees\": \"कुल उपस्थित सत्संगी\",\n          \"Example\":\"उदाहरण\"\n        }\n      }\n    },\n    lng: \"en\",\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\n\n\nfunction App() {\n  const l = localStorage.getItem(\"currentLanguage\")\n  i18n.changeLanguage(l)\n  return (\n    <div className=\"App\">\n        <SearchBar/>\n    </div>\n  );\n\n  \n\n\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <cohde>src/App.js</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/reportWebVitals.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/search.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { Component, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport search from './search.svg';\nimport './App.css';\nimport AutoCompleteSearchBox from './src/AutoCompleteSearchBox';\nimport AutoCompleteSearchBoxLogin from './AutoCompleteSearchBoxLogin';\nimport Scanner from './src/BarcodeScanner';\nimport { stocksData } from './data/stocks'\nimport firebase from \"firebase/app\";\nimport { ThemeProvider } from 'styled-components';\nimport styled from \"styled-components\";\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport { withTranslation } from 'react-i18next';\nimport i18n from \"i18next\";\nimport Lottie from 'react-lottie';\nimport thumbsUp from './856-thumbs-up-grey-blue.json';\n\nrequire('firebase/auth');\nrequire('firebase/database');\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: thumbsUp,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n\nconst DropDownContainer = styled(\"div\")`\n  width: 20em;\n  margin: 0 auto;\n  align: centre;\n`;\n\nconst DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 350;\n  font-size: 1.3rem;\n  color: #000000;\n  background: #f6f6f6;\n`;\n\nconst DropDownHeaderEvent = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 350;\n  font-size: 1.3rem;\n  color: #000000;\n  background: #f6f6f6;\n  text-align: left;\n`;\n\nconst Container = styled(\"div\")`\n`;\n\nconst DropDownListContainer = styled(\"div\")`\n  max-height:200px;\n  overflow:scroll;\n`;\n\n// const DropDownListContainer = styled(\"div\")``;\n\nconst DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #f6f6f6;\n  border: 1px solid #000000;\n  box-sizing: border-box;\n  color: #000000;\n  font-size: 1rem;\n  font-weight: 350;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nconst DropDownListEvent = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #f6f6f6;\n  border: 1px solid #000000;\n  box-sizing: border-box;\n  color: #000000;\n  font-size: 1rem;\n  font-weight: 350;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n  text-align: left;\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n`;\n\n\nconst button = {\n  color: \"#00008E\",\n  backgroundColor: \"#f6f6f6\",\n  padding: \"10px\",\n  fontFamily: \"Arial\"\n};\nconst firebaseConfig = {\n  apiKey: \"AIzaSyApR69k8Oyt0PLCJQSJfHbhBH4aspxtCXQ\",\n  authDomain: \"pams-e7971.firebaseapp.com\",\n  databaseURL: \"https://pams-e7971.firebaseio.com\",\n  projectId: \"pams-e7971\",\n  storageBucket: \"pams-e7971.appspot.com\",\n  messagingSenderId: \"821251191711\",\n  appId: \"1:821251191711:web:dd4ce38f4dca3eb45d03aa\"\n};\nvar backspace_count = 0;\nfunction handleEnter(event) {\n  const form = event.target.form;\n  const index = Array.prototype.indexOf.call(form, event.target);\n  //console.log(index)\n  \n  if (event.target.value.length === event.target.maxLength) {\n    if (index < 3 ){\n      const form = event.target.form;\n      console.log(event.target.maxLength);\n      console.log(event.target.value.length);\n      form.elements[index + 1].focus();\n      event.preventDefault();\n      backspace_count = 0;\n    }\n  }\n  else if (event.keyCode == 8){\n    console.log(\"backspace pressed\");\n    backspace_count = backspace_count + 1;\n    console.log(\"backspace_count=\"+backspace_count);\n    if(index != 0 && backspace_count > 1 && event.target.value.length == 0){\n      console.log(\"inside bck codtion\");\n      form.elements[index - 1].focus();\n      // event.preventDefault();\n      backspace_count = 0;\n    }\n  }\n}\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: [],\n      selectedUsers: [],\n      selectedDate: new Date(),\n      eventList: [],\n      dayTimeList: ['Morning', 'Evening'],\n      isOpen: false,\n      isOpenDayTime: false,\n      selectedEvent: null,\n      selectedDayTime: null,\n      submitSuccess: false,\n\n      userName: null,\n      selectedDOY: null,\n      isOpenDOY: false,\n      yearList: [],\n      login: false,\n      isMPGCoordinator: false,\n      year1: null,\n      year2: null,\n      year3: null,\n      year4: null\n    };\n    this.submitAttendance = this.submitAttendance.bind(this);\n    this.login = this.login.bind(this);\n    for (let i = 2003; i > 1900; --i)\n      this.state.yearList.push(i);\n  }\n\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n\n  login() {\n    if (this.state.userName == null) {\n      alert(\"Please select a valid UID\")\n      return\n    }\n\n    // if(this.state.selectedDOY == null)\n    // {\n    //   alert(\"Please select a valid year of date\")\n    //   return\n    // }\n    if (this.state.year1 == null) {\n      alert(\"Please select a valid year of date\")\n      return\n    }\n    if (this.state.year2 == null) {\n      alert(\"Please select a valid year of date\")\n      return\n    }\n    if (this.state.year3 == null) {\n      alert(\"Please select a valid year of date\")\n      return\n    }\n    if (this.state.year4 == null) {\n      alert(\"Please select a valid year of date\")\n      return\n    }\n\n\n    // console.log(this.state.selectedDOY, this.state.userName)\n\n    // // Initialize Firebase\n    // if (!firebase.apps.length) {\n    //   firebase.initializeApp(firebaseConfig);\n    // }else {\n    //   firebase.app(); // if already initialized, use that one\n    // }\n    // // const formattedDOB = (\"0\" + this.state.dateOfBirth.getDate()).slice(-2) + \"-\" + this.state.dateOfBirth.toLocaleString('default', { month: 'long' }) + \"-\" + this.state.dateOfBirth.getFullYear()\n\n    // // console.log(formattedDOB, this.state.userName)\n    // // todo function to complete\n\n    if (String(this.state.userName.dobYear) == this.state.year1 + this.state.year2 + this.state.year3 + this.state.year4) {\n      // console.log(\"user\", \"isMPGCoordinator\" in this.state.userName)\n      // console.log(\"isMPGCoordinator\", this.state.userName.isMPGCoordinator)\n\n      if ((\"in_dayalbagh\" in this.state.userName) && (this.state.userName.in_dayalbagh === true)) {\n        // console.log(\"you are here\")\n        this.setState({\n          login: true\n        })\n\n      }\n      else {\n        // console.log(\"you shouldn't be here\")\n        let tempEventList = this.state.eventList\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Evening Satsang\"), 1)\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Health Care PT\"), 1)\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh March Past\"), 1)\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Morning Satsang\"), 1)\n\n        if (!((\"is_core_team\" in this.state.userName) && (this.state.userName.is_core_team === true))) {\n          tempEventList.splice(tempEventList.indexOf(\"Evening Branch eSatsang\"), 1)\n          tempEventList.splice(tempEventList.indexOf(\"Morning Branch eSatsang\"), 1)\n\n        }\n        this.setState({\n          login: true,\n          eventList: tempEventList\n        })\n      }\n      // console.log(\"state\", this.state)\n    }\n    else {\n      alert(\"Invalid credentials\")\n      window.location.reload();\n    }\n  }\n\n  handleYear1Change = (event) => {\n    this.setState({\n      year1: event.target.value\n    })\n  }\n\n  handleYear2Change = (event) => {\n    this.setState({\n      year2: event.target.value\n    })\n  }\n\n  handleYear3Change = (event) => {\n    this.setState({\n      year3: event.target.value\n    })\n  }\n\n  handleYear4Change = (event) => {\n    this.setState({\n      year4: event.target.value\n    })\n  }\n\n  submitAttendance = async () => {\n    if (this.state.submitSuccess) {\n      return\n    }\n    if (this.state.selectedEvent == null) {\n      alert(\"Please select a valid event\")\n      return\n    }\n\n    if (this.state.selectedUsers.length == 0) {\n      alert(\"Please select attendees\")\n      return\n    }\n    // console.log(this.state.selectedDate, this.state.selectedEvent, this.state.selectedUsers)\n\n    // Initialize Firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n      await firebase.auth()\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\n        // .then((data) => console.log(data))\n        .catch(error => console.log(error))\n\n    } else {\n      firebase.app(); // if already initialized, use that one\n      await firebase.auth()\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\n        // .then((data) => console.log(data))\n        .catch(error => console.log(error))\n    }\n    const attendanceDate = (\"0\" + this.state.selectedDate.getDate()).slice(-2) + \"-\" + this.state.selectedDate.toLocaleString('default', { month: 'long' }) + \"-\" + this.state.selectedDate.getFullYear()\n    // console.log(attendanceDate)\n    this.state.selectedUsers.forEach((user) => {\n      user.attendanceMarkedByUID = this.state.userName.newUID\n      user.attendanceMarkedByName = this.state.userName.nameSatsangi\n      user.activityName = this.state.selectedEvent\n      user.datePresent = attendanceDate\n      let currentTimestamp = new Date()\n      user.timestamp = currentTimestamp.getDate() + '-' + (currentTimestamp.getMonth() + 1) + '-' + currentTimestamp.getFullYear() + \" \" + currentTimestamp.getHours() + \":\" + currentTimestamp.getMinutes() + \":\" + currentTimestamp.getSeconds();\n\n      console.log(user)\n      firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + user.newUID).set(user)\n      firebase.database().ref('satsangiUsers-attendance/' + this.state.selectedEvent + \"/\" + user.branchCode + \"/\" + attendanceDate).set(user)\n    })\n    // firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + this.state.sele)\n    console.log(\"attendance submitted\")\n    this.setState({ submitSuccess: true })\n    //alert(this.props.t('submit_message'))\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 3000)\n  }\n\n  fetchData = async () => {\n\n    // Initialize Firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n      await firebase.auth()\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\n        //.then((data) => console.log(data))\n        .catch(error => console.log(error))\n\n    } else {\n\n      firebase.app(); // if already initialized, use that one\n      await firebase.auth()\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\n        //.then((data) => console.log(data))\n        .catch(error => console.log(error))\n    }\n    const users = await firebase.database().ref('/satsangiUsers/').once('value').then((snapshot) => {\n      return snapshot.val()\n    })\n    this.setState({\n      userData: users\n    });\n\n    const eventListFromFirebase = await firebase.database().ref('/activities/').once('value').then((snapshot) => {\n      return snapshot.val()\n    })\n    this.setState({\n      eventList: Object.keys(eventListFromFirebase)\n    });\n\n  }\n\n  handleOnCLick = (lang) => {\n    //store the lang in local storage\n    //on button click get the lang from localstorage and then change the lang\n    localStorage.setItem(\"currentLanguage\", lang)\n    //localStorage.getItem(\"currentLanguage\")\n    //redux-->local storage\n    i18n.changeLanguage(lang)\n  }\n\n  updateEvetToggle = () => {\n    if (this.state.isOpen) {\n      this.setState({ isOpen: false })\n    } else { return }\n  }\n\n  updateEvetToggleDOY = () => {\n    if (this.state.isOpenDOY) {\n      this.setState({ isOpenDOY: false })\n    } else { return }\n  }\n\n  render() {\n    const { t } = this.props;\n    const onClick = (selectedUsers) => {\n      this.setState({ selectedUsers: selectedUsers })\n    }\n\n    const onLoginClick = (selectedUsers) => {\n      this.setState({ userName: selectedUsers })\n    }\n\n    // console.log(this.state.userData)\n    const toggling = () => this.setState({ isOpen: !this.state.isOpen });\n    const toggling_DOY = () => this.setState({ isOpenDOY: !this.state.isOpenDOY });\n\n    const togglingDayTime = () => this.setState({ isOpenDayTime: !this.state.isOpenDayTime });\n\n    const onOptionClicked = (value) => () => {\n      this.setState({ selectedEvent: value });\n      this.setState({ isOpen: false })\n      // console.log(this.state.selectedEvent);\n    };\n\n    const onOptionDayTimeClicked = (value) => () => {\n      this.setState({ selectedDayTime: value });\n      this.setState({ isOpenDayTime: false })\n    }\n\n    const onOptionClickedYOB = (value) => () => {\n      this.setState({ selectedDOY: value });\n      this.setState({ isOpenDOY: false })\n      // console.log(this.state.selectedDOY);\n    };\n\n\n    //console.log(\"sumsa ki jai\",this.props.t('Welcome_to_React'))\n\n    if (this.state.login == true)\n      return (\n        <div className=\"App\">\n          <Container onClick={this.updateEvetToggle}>\n            <button onClick={() => this.handleOnCLick(\"en\")}>English</button>\n            <button onClick={() => this.handleOnCLick(\"hi\")}>Hindi</button>\n            <h1>{t(\"Satsangis_Attendance\")}</h1>\n            <h2>{t(\"Radhasoami\")} {this.state.userName.nameSatsangi}</h2>\n            <div>\n              <h3>{t(\"Choose_date\")}</h3>\n              <DatePicker\n                selected={this.state.selectedDate}\n                onChange={date => this.setState({ selectedDate: date })}\n                dateFormat='dd/MM/yyyy'\n                disabled={true}\n              />\n            </div>\n            {/* <div>\n              <h3>{t(\"Choose_day_time\")}</h3>\n              <DropDownContainer>\n                <DropDownHeader onClick={togglingDayTime}>\n                  {this.state.selectedDayTime || \"Daytime\"}\n                </DropDownHeader>\n                {this.state.isOpenDayTime && (\n                  <DropDownListContainer>\n                    <DropDownList>\n                      {this.state.dayTimeList.map((dayTime) => (\n                        <ListItem onClick={onOptionDayTimeClicked(dayTime)} key={Math.random()}>\n                          {dayTime}\n                        </ListItem>\n                      ))}\n                    </DropDownList>\n                  </DropDownListContainer>\n                )}\n              </DropDownContainer>\n            </div> */}\n            <div>\n              <h3>{t(\"Choose_event\")}</h3>\n              <DropDownContainer>\n                <DropDownHeaderEvent onClick={toggling}>\n                  {this.state.selectedEvent || \"Event\"}\n                </DropDownHeaderEvent>\n                {this.state.isOpen && (\n                  <DropDownListContainer>\n                    <DropDownListEvent>\n                      {this.state.eventList.map((event) => (\n                        <ListItem onClick={onOptionClicked(event)} key={Math.random()}>\n                          {event}\n                        </ListItem>\n                      ))}\n                    </DropDownListEvent>\n                  </DropDownListContainer>\n                )}\n              </DropDownContainer>\n            </div>\n            <div>\n              <h3>{t(\"Choose_user\")}</h3>\n              <p>{t(\"Total_attendees\")} - {this.state.selectedUsers.length}</p>\n              <AutoCompleteSearchBox\n                placeHolderSearchLabel={\"Search..\"}\n                primaryIndex={\"nameSatsangi\"}\n                secondaryIndex={\"newUID\"}\n                showSecondarySearchCriterion={true}\n                secondarySearchClassName=\"secondarySearchClassName\"\n                tertiaryIndex={\"branchCode\"}\n                showTertiarySearchCriterion={true}\n                tertiarySearchClassName=\"tertiarySearchClassName\"\n                suggestions={Object.values(this.state.userData)}\n                onClick={onClick}\n                showSearchBtn={true}\n                searchImg={search}\n              />\n            </div>\n            {this.state.submitSuccess ? <div>\n              <div>{t(\"submit_message\")}</div>\n              <Lottie options={defaultOptions}\n                height={20}\n                width={20} />\n            </div>\n              : null}\n            <div>\n              <br></br>\n              <button onClick={this.submitAttendance} style={button}>\n                {t(\"Submit_Attendance\")}\n              </button>\n            </div>\n          </Container>\n        </div>\n      );\n    else\n      return (\n        <div className=\"App\">\n          <Container onClick={this.updateEvetToggleDOY}>\n            <button onClick={() => this.handleOnCLick(\"en\")}>English</button>\n            <button onClick={() => this.handleOnCLick(\"hi\")}>Hindi</button>\n            <h1>Satsangis Attendance </h1>\n            <div>\n              <h3>{t(\"Choose_UID\")}</h3>\n              <AutoCompleteSearchBoxLogin\n                placeHolderSearchLabel={\"Search..\"}\n                primaryIndex={\"nameSatsangi\"}\n                secondaryIndex={\"newUID\"}\n                showSecondarySearchCriterion={true}\n                secondarySearchClassName=\"secondarySearchClassName\"\n                tertiaryIndex={\"branchCode\"}\n                showTertiarySearchCriterion={true}\n                tertiarySearchClassName=\"tertiarySearchClassName\"\n                suggestions={Object.values(this.state.userData)}\n                onClick={onLoginClick}\n                showSearchBtn={true}\n                searchImg={search}\n              />\n            </div>\n\n            <div>\n              <h3>{t(\"Choose_Year_of_Birth\")}</h3>\n              {/* <DropDownContainer>\n                <DropDownHeader onClick={toggling_DOY}>\n                  {this.state.selectedDOY || \"Year\"}\n                </DropDownHeader>\n                {this.state.isOpenDOY && (\n                  <DropDownListContainer>\n                    <DropDownList>\n                      {this.state.yearList.map((event) => (\n                        <ListItem onClick={onOptionClickedYOB(event)} key={Math.random()}>\n                          {event}\n                        </ListItem>\n                      ))}\n                    </DropDownList>\n                  </DropDownListContainer>\n                )}\n              </DropDownContainer> */}\n\n              <form>\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year1} onChange={this.handleYear1Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year2} onChange={this.handleYear2Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year3} onChange={this.handleYear3Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year4} onChange={this.handleYear4Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter}/>\n              </form>\n              <h7>{t(\"Example\")}:1950</h7>\n            </div>\n            <div>\n              <br></br>\n              <button onClick={this.login} style={button}>\n                {t(\"Login\")}\n              </button>\n            </div>\n          </Container>\n        </div>\n\n\n      );\n\n\n  }\n}\nexport default withTranslation()(SearchBar);\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/AutoCompleteSearchBoxLogin.js",["76","77","78","79","80","81"],"import React, { Component } from 'react'\nimport styled from 'styled-components';\n//import Chip from '@material-ui/core/Chip';\n// import { makeStyles } from '@material-ui/core/styles';\n\n\nconst StyledNoSuggsDiv = styled.div`\n    color: #999;\n    padding: 0.5rem;\n`;\n\nconst StyledContainer = styled.div`\n \n position: relative;\n\n input{\n  width:100%;\n  height:45px;\n  border:0px solid black;\n  border-radius: 0px;\n  padding:0px 5px 0 10px;\n  font-size: 0.75rem;\n  background: #f6f6f6;\n  margin:5px 5px 5px 5px;\n}\n\n input:focus{\n  outline: none !important;\n}\n\n button{\n  position:absolute;\n  right:-5px;\n  top:15px;\n  border: none;\n  background: none;\n}\n img{\n  border-style: none;\n  vertical-align: middle;\n}\n\n\n\n`;\nconst StyledUl = styled.ul`\n\n  border: 1px solid #999;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  width:100%;\n  overflow-y: auto;\n  padding-left: 0;\n  color:${props => props.fontColor};\n\n\nli {\n  padding: 0.5rem;\n  list-style-type: none;\n  list-style: none;\n}\n\n.suggestion-active,li:hover \n{\n  cursor: pointer;\n  font-weight: 700;\n  background-color: aliceblue;\n  border:0px solid gray;\n  padding:4px 4px 4px 4px;\n  margin:5px 5px 5px 5px;\n  font-weight: bold;\n  background-color: coral;\n\n\n}\n\nli:not(:last-of-type) {\n  border-bottom: 1px solid #999;\n}\n\n`;\n\n\nconst defaultProps = {\n    placeHolderSearchLabel:\"Search\",\n    showSearchBtn:false,\n    styles: {\n        ulDiv:{\n            color:\"blue\"\n        },\n        searchImage: {\n            width: \"24\",\n            height: \"24\",\n            alt: \"Search\"\n        },\n        container: {\n            width: \"400px\",\n            margin: \"0 auto\"\n        },\n    }\n}\n\n\nclass AutoCompleteSearchBoxLogin extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            filteredSuggestions: [],\n            activeSuggestions: 0,\n            showSuggestions: false,\n            userInput: \"\",\n            selectedUsers: null\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n    }\n\n\n    onChange(e){\n        // console.log(e)\n        const { suggestions, primaryIndex, secondaryIndex, tertiaryIndex } = this.props;\n        const userSearchInput = e.target.value;\n\n        const filteredSuggestions = suggestions.filter((suggestion) => {\n            return ((suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1) ||\n            ((suggestion[secondaryIndex]) && (suggestion[secondaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)) ||\n            ((suggestion[tertiaryIndex]) && (suggestion[tertiaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)));\n        });\n\n        // console.log(filteredSuggestions);\n\n        this.setState({\n            filteredSuggestions: filteredSuggestions,\n            activeSuggestions: 0,\n            showSuggestions: true,\n            userInput: userSearchInput\n        })\n\n    }\n\n    onKeyDown(e) {\n\n        const { activeSuggestions, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n\n            this.state.selectedUsers = filteredSuggestions[activeSuggestions]\n            this.setState({\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestions][this.props.secondaryIndex],\n                // selectedUsers: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\n            })\n            console.log(this.state.selectedUsers)\n            this.props.onClick(this.state.selectedUsers);\n        }\n        //user has clicked down arrow\n        else if (e.keyCode == 40) {\n\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\n        }\n        //user has clicked up arrow\n        else if (e.keyCode == 38) {\n            if (activeSuggestions === 0) {\n                return;\n            }\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\n        }\n    }\n\n    onClick(e) {\n        this.state.selectedUsers = this.state.filteredSuggestions[e.currentTarget.dataset.id]\n        // if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\n        //     this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\n        // }\n        // console.log('user input list')\n        // console.log(this.state.selectedUsers)\n        this.setState({\n            userInput: this.state.filteredSuggestions[e.currentTarget.dataset.id][this.props.secondaryIndex],\n            showSuggestions: false\n        })\n        console.log(this.state)\n        this.props.onClick(this.state.selectedUsers);\n    }\n\n    onDelete(user) {\n        this.setState({\n            userInput: \"\",\n            selectedUsers: null\n        })\n    }\n\n    render() {\n\n        const {\n            state: {\n                filteredSuggestions,\n                activeSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\n\n        let autoCompleteSuggestions;\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                autoCompleteSuggestions = (\n                    <StyledUl fontColor={styles.ulDiv.color}>\n                        {\n                            filteredSuggestions.map((suggestion, index) => {\n\n                                let className;\n\n                                if (index === activeSuggestions) {\n                                    className = \"suggestion-active\";\n                                }\n\n                                return (\n                                    <li\n                                        className={className}\n                                        key={index}\n                                        onClick={this.onClick}\n                                        data-id={index}\n                                        >\n                                        {suggestion[primaryIndex]}\n                                        \n                                        \n                                        <br />\n                                        {/* <span>\n                                            {\n                                                this.props.showSecondarySearchCriterion ?\n                                                    <small>{suggestion[secondaryIndex]}</small> :\n                                                    null\n                                            }\n                                            {\n                                                this.props.showTertiarySearchCriterion ?\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\n                                                    null\n                                            }\n                                        </span> */}\n\n                                    </li>\n                                )\n                            })\n\n                        }\n                    </StyledUl>\n                )\n            }\n            else\n            {\n               \n                    autoCompleteSuggestions = (\n                        <StyledNoSuggsDiv>\n                          <em>No suggestions, you're on your own!</em>\n                        </StyledNoSuggsDiv>\n                      );\n                \n            }\n        }\n        return (\n\n            <div style={styles.container}>\n                <StyledContainer>\n                    <input\n                        placeholder={this.props.placeHolderSearchLabel}\n                        type=\"text\"\n                        onChange={this.onChange}\n                        onKeyDown={this.onKeyDown}\n                        value={userInput}\n                    />\n                </StyledContainer>\n                {autoCompleteSuggestions}\n            </div>\n        )\n    }\n}\n\nAutoCompleteSearchBoxLogin.defaultProps = defaultProps;\nexport default AutoCompleteSearchBoxLogin\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/AutoCompleteSearchBox.js",["82","83","84","85","86","87"],"import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport QrScanner from './qr-scanner'\n//import Chip from '@material-ui/core/Chip';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Chip from './Chips'\nconst qr_image = '%PUBLIC_URL%/qr-code.png'\nconst StyledNoSuggsDiv = styled.div`\n    color: #999;\n    padding: 0.5rem;\n`;\nconst scannerStyle = {\n    width : '1000%',\n    height : '1000%'\n  }\n  \nconst StyledContainer = styled.div`\n \n position: relative;\n\n .photo {\n    height: 50px;\n    width: 50px; \n    position:right;\n    border-style: none;\n    vertical-align: middle;\n    padding-left: 0;\n    margin-left: 0;\n    padding-right: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n}   \n\n input{\n  width:100%;\n  height:45px;\n  border:0px solid black;\n  border-radius: 0px;\n  padding:0px 5px 0 10px;\n  font-size: 0.75rem;\n  background: #f6f6f6;\n  margin:5px 5px 5px 5px;\n}\n\n input:focus{\n  outline: none !important;\n}\n\n button{\n  position:absolute;\n  right:-5px;\n  top:15px;\n  border: none;\n  background: none;\n}\n img{\n  border-style: none;\n  vertical-align: middle;\n}\n\n\n\n`;\nconst StyledUl = styled.ul`\n\n  border: 1px solid #999;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  width:100%;\n  overflow-y: auto;\n  padding-left: 0;\n  color:${props => props.fontColor};\n\n\nli {\n  padding: 0.5rem;\n  list-style-type: none;\n  list-style: none;\n}\n\n.suggestion-active,li:hover \n{\n  cursor: pointer;\n  font-weight: 700;\n  background-color: aliceblue;\n  border:0px solid gray;\n  padding:4px 4px 4px 4px;\n  margin:5px 5px 5px 5px;\n  font-weight: bold;\n  background-color: coral;\n\n\n}\n\nli:not(:last-of-type) {\n  border-bottom: 1px solid #999;\n}\n\n`;\n\n\nconst defaultProps = {\n    placeHolderSearchLabel:\"Search\",\n    showSearchBtn:false,\n    styles: {\n        ulDiv:{\n            color:\"blue\"\n        },\n        searchImage: {\n            width: \"24\",\n            height: \"24\",\n            alt: \"Search\"\n        },\n        container: {\n            width: \"400px\",\n            margin: \"0 auto\"\n        },\n    }\n}\n\n\nclass AutoCompleteSearchBox extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            filteredSuggestions: [],\n            activeSuggestions: 0,\n            showSuggestions: false,\n            userInput: \"\",\n            selectedUsers: [],\n            isQRScannerOpen: false\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.onDelete = this.onDelete.bind(this);\n        this.changeQRState = this.changeQRState.bind(this);\n    }\n\n    changeQRState() {\n        this.setState({\n            isQRScannerOpen: !this.state.isQRScannerOpen\n        })\n    }\n\n    onChange(e){\n        // console.log(e)\n        const { suggestions, primaryIndex } = this.props;\n        const userSearchInput = e.target.value;\n\n        const filteredSuggestions = suggestions.filter((suggestion) => {\n            return (suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1);\n        });\n\n        // console.log(filteredSuggestions);\n\n        this.setState({\n            filteredSuggestions: filteredSuggestions,\n            activeSuggestions: 0,\n            showSuggestions: true,\n            userInput: userSearchInput\n        })\n\n    }\n\n    onKeyDown(e) {\n\n        const { activeSuggestions, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n\n            this.setState({\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\n            })\n\n            this.props.onClick(filteredSuggestions[activeSuggestions]);\n        }\n        //user has clicked down arrow\n        else if (e.keyCode == 40) {\n\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\n                return;\n            }\n\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\n        }\n        //user has clicked up arrow\n        else if (e.keyCode == 38) {\n            if (activeSuggestions === 0) {\n                return;\n            }\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\n        }\n\n\n\n    }\n\n    onClick(e) {\n        if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\n            this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\n        }\n        // console.log('user input list')\n        // console.log(this.state.selectedUsers)\n        this.setState({\n            userInput: \"\"\n        })\n        this.props.onClick(this.state.selectedUsers);\n    }\n\n    onDelete(user) {\n        const index = this.state.selectedUsers.indexOf(user);\n        if (index > -1) {\n            this.state.selectedUsers.splice(index, 1)\n            // console.log('after delete')\n            // console.log(this.state.selectedUsers)\n            this.setState({\n                userInput: \"\"\n            })\n          }\n        this.props.onClick(this.state.selectedUsers);\n    }\n\n    render() {\n\n        const {\n            state: {\n                filteredSuggestions,\n                activeSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\n\n        let autoCompleteSuggestions;\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                autoCompleteSuggestions = (\n                    <StyledUl fontColor={styles.ulDiv.color}>\n                        {\n                            filteredSuggestions.map((suggestion, index) => {\n\n                                let className;\n\n                                if (index === activeSuggestions) {\n                                    className = \"suggestion-active\";\n                                }\n\n                                return (\n                                    <li\n                                        className={className}\n                                        key={index}\n                                        onClick={this.onClick}\n                                        data-id={index}\n                                        >\n                                        {suggestion[primaryIndex]}\n                                        \n                                        \n                                        <br />\n                                        <span>\n                                            {\n                                                this.props.showSecondarySearchCriterion ?\n                                                    <small>{suggestion[secondaryIndex]}</small> :\n                                                    null\n                                            }\n                                            {/* {\n                                                this.props.showTertiarySearchCriterion ?\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\n                                                    null\n                                            } */}\n                                        </span>\n\n                                    </li>\n                                )\n                            })\n\n                        }\n                    </StyledUl>\n                )\n            }\n            else\n            {\n               \n                    autoCompleteSuggestions = (\n                        <StyledNoSuggsDiv>\n                          <em>No suggestions, you're on your own!</em>\n                        </StyledNoSuggsDiv>\n                      );\n                \n            }\n        }\n        if (this.state.isQRScannerOpen == false)\n        {\n            return (\n\n                <div style={styles.container}>\n                    <StyledContainer>\n                    <div>\n                        {this.state.selectedUsers.map((user, index) => (\n                            <Chip \n                                label={user.nameSatsangi}\n                                onDelete={() => this.onDelete(user)}\n                            />\n                        ))}          \n                        </div>\n                        <input\n                            placeholder={this.props.placeHolderSearchLabel}\n                            type=\"text\"\n                            onChange={this.onChange}\n                            onKeyDown={this.onKeyDown}\n                            value={userInput}\n                        />\n                        <button onClick={this.changeQRState}>\n                            <img className=\"photo\" src = \"/qr-code.png\" />\n                        </button>\n    \n                        \n                    </StyledContainer>\n                    {autoCompleteSuggestions}\n                </div>\n            )\n        }\n        else {\n            return (\n\n                <div style={scannerStyle} >\n                    <QrScanner/>\n                </div>\n            )\n        }\n        \n    }\n}\n\nAutoCompleteSearchBox.defaultProps = defaultProps;\nexport default AutoCompleteSearchBox\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/data/stocks.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/BarcodeScanner.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Chips.js",["88","89","90","91"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { HighlightOff } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px\",\n    color: \"black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Chips(props) {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    if (props.onDelete) {\n      props.onDelete();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Chip label={props.label || \"\"} onDelete={() => handleDelete()} />\n    </div>\n  );\n}\n/*\n<Chip iconColorPrimary=\"secondary\" deleteIcon={<HighlightOff/>} label=\"Delete\" onDelete={handleDelete} color=\"secondary\" />*/\n","/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/Scanner.js",[],"/Users/suhavangupta/Documents/MySpace/Github/satsangis-attendance/src/search_bar/src/qr-scanner.js",[],["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":12},{"ruleId":"98","severity":1,"message":"102","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":24},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"104","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"105","line":1,"column":39,"nodeType":"100","messageId":"101","endLine":1,"endColumn":47},{"ruleId":"98","severity":1,"message":"106","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"107","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":15},{"ruleId":"98","severity":1,"message":"108","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":20},{"ruleId":"98","severity":1,"message":"109","line":10,"column":10,"nodeType":"100","messageId":"101","endLine":10,"endColumn":23},{"ruleId":"98","severity":1,"message":"110","line":38,"column":7,"nodeType":"100","messageId":"101","endLine":38,"endColumn":21},{"ruleId":"98","severity":1,"message":"111","line":69,"column":7,"nodeType":"100","messageId":"101","endLine":69,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":137,"column":26,"nodeType":"114","messageId":"115","endLine":137,"endColumn":28},{"ruleId":"112","severity":1,"message":"116","line":141,"column":14,"nodeType":"114","messageId":"115","endLine":141,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":141,"column":71,"nodeType":"114","messageId":"115","endLine":141,"endColumn":73},{"ruleId":"112","severity":1,"message":"113","line":231,"column":45,"nodeType":"114","messageId":"115","endLine":231,"endColumn":47},{"ruleId":"112","severity":1,"message":"113","line":301,"column":41,"nodeType":"114","messageId":"115","endLine":301,"endColumn":43},{"ruleId":"98","severity":1,"message":"117","line":413,"column":11,"nodeType":"100","messageId":"101","endLine":413,"endColumn":23},{"ruleId":"98","severity":1,"message":"118","line":415,"column":11,"nodeType":"100","messageId":"101","endLine":415,"endColumn":26},{"ruleId":"98","severity":1,"message":"119","line":423,"column":11,"nodeType":"100","messageId":"101","endLine":423,"endColumn":33},{"ruleId":"98","severity":1,"message":"120","line":428,"column":11,"nodeType":"100","messageId":"101","endLine":428,"endColumn":29},{"ruleId":"112","severity":1,"message":"113","line":437,"column":26,"nodeType":"114","messageId":"115","endLine":437,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":152,"column":13,"nodeType":"123","endLine":152,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":162,"column":28,"nodeType":"114","messageId":"115","endLine":162,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":171,"column":28,"nodeType":"114","messageId":"115","endLine":171,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":180,"column":9,"nodeType":"123","endLine":180,"endColumn":19},{"ruleId":"98","severity":1,"message":"124","line":212,"column":31,"nodeType":"100","messageId":"101","endLine":212,"endColumn":45},{"ruleId":"98","severity":1,"message":"125","line":212,"column":47,"nodeType":"100","messageId":"101","endLine":212,"endColumn":60},{"ruleId":"98","severity":1,"message":"126","line":7,"column":7,"nodeType":"100","messageId":"101","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":183,"column":28,"nodeType":"114","messageId":"115","endLine":183,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":192,"column":28,"nodeType":"114","messageId":"115","endLine":192,"endColumn":30},{"ruleId":"98","severity":1,"message":"125","line":239,"column":47,"nodeType":"100","messageId":"101","endLine":239,"endColumn":60},{"ruleId":"112","severity":1,"message":"113","line":299,"column":40,"nodeType":"114","messageId":"115","endLine":299,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":321,"column":29,"nodeType":"129","endLine":321,"endColumn":75},{"ruleId":"98","severity":1,"message":"130","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"98","severity":1,"message":"131","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":16},{"ruleId":"98","severity":1,"message":"132","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":16},{"ruleId":"98","severity":1,"message":"133","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":22},{"ruleId":"94","replacedBy":"134"},{"ruleId":"96","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useTranslation' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'Scanner' is defined but never used.","'stocksData' is defined but never used.","'ThemeProvider' is defined but never used.","'DropDownHeader' is assigned a value but never used.","'DropDownList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'toggling_DOY' is assigned a value but never used.","'togglingDayTime' is assigned a value but never used.","'onOptionDayTimeClicked' is assigned a value but never used.","'onOptionClickedYOB' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'secondaryIndex' is assigned a value but never used.","'tertiaryIndex' is assigned a value but never used.","'qr_image' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'HighlightOff' is defined but never used.",["136"],["137"],"no-global-assign","no-unsafe-negation"]