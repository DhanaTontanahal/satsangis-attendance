[{"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\index.js":"1","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\App.js":"2","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\reportWebVitals.js":"3","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\search.js":"4","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\AutoCompleteSearchBox.js":"5","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\AutoCompleteSearchBoxLogin.js":"6","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\data\\stocks.js":"7","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Chips.js":"8","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Scanner.js":"9","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\BarcodeScanner.js":"10"},{"size":523,"mtime":1611234742551,"results":"11","hashOfConfig":"12"},{"size":2774,"mtime":1616513323346,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1611234742552,"results":"14","hashOfConfig":"12"},{"size":20144,"mtime":1619457705035,"results":"15","hashOfConfig":"12"},{"size":8528,"mtime":1616361765620,"results":"16","hashOfConfig":"12"},{"size":8641,"mtime":1616361765609,"results":"17","hashOfConfig":"12"},{"size":159998,"mtime":1611234742562,"results":"18","hashOfConfig":"12"},{"size":1021,"mtime":1611234742570,"results":"19","hashOfConfig":"12"},{"size":1950,"mtime":1619457711873,"results":"20","hashOfConfig":"12"},{"size":1114,"mtime":1619457709344,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10tpiri",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\index.js",[],["49","50"],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\App.js",["51","52"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport SearchBar from './search_bar/search';\r\nimport i18n from \"i18next\";\r\nimport { useTranslation, initReactI18next } from \"react-i18next\";\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: {\r\n          \"Satsangis_Attendance\": \"Satsangis Attendance\",\r\n          \"Choose_date\":\"Date\",\r\n          \"Choose_event\":\"Choose Event\",\r\n          \"Choose_user\":\"Enter Names\",\r\n          \"Submit_Attendance\":\"Submit Attendance\",\r\n          \"submit_message\":\"Radhasoami \\nYour attendance is marked!\",\r\n          \"Choose_Year_of_Birth\":\"Choose Year of Birth\",\r\n          \"Choose_UID\":\"Choose UID\",\r\n          \"Login\":\"Login\",\r\n          \"Radhasoami\":\"Radhasoami\",\r\n          \"Choose_day_time\": \"Choose Daytime\",\r\n          \"Total_attendees\": \"Total attendees\",\r\n          \"Example\":\"Example\"\r\n        }\r\n      },\r\n      hi: {\r\n        translation: {\r\n          \"Satsangis_Attendance\": \"सत्संगियों की उपस्थिति\",\r\n          \"Choose_date\":\"तिथि\",\r\n          \"Choose_event\":\"ईवेंट चुनें\",\r\n          \"Choose_user\":\"सत्संगियों का नाम चुनें\",\r\n          \"Submit_Attendance\":\"उपस्थिति दर्ज करें\",\r\n          \"submit_message\":\"राधास्वामी \\nआपकी attendance लग गई है।\",\r\n          \"Choose_Year_of_Birth\":\"जन्म का वर्ष चुनें\",\r\n          \"Choose_UID\":\"UID चुनें\",\r\n          \"Login\":\"लॉग इन करें\",\r\n          \"Radhasoami\":\"राधास्वामी\",\r\n          \"Choose_day_time\": \"दिन का समय चुनें\",\r\n          \"Total_attendees\": \"कुल उपस्थित सत्संगी\",\r\n          \"Example\":\"उदाहरण\"\r\n        }\r\n      }\r\n    },\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\n\r\n\r\nfunction App() {\r\n  const l = localStorage.getItem(\"currentLanguage\")\r\n  i18n.changeLanguage(l)\r\n  return (\r\n    <div className=\"App\">\r\n        <SearchBar/>\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n\r\n  // return (\r\n  //   <div className=\"App\">\r\n  //     <header className=\"App-header\">\r\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n  //       <p>\r\n  //         Edit <cohde>src/App.js</code> and save to reload.\r\n  //       </p>\r\n  //       <a\r\n  //         className=\"App-link\"\r\n  //         href=\"https://reactjs.org\"\r\n  //         target=\"_blank\"\r\n  //         rel=\"noopener noreferrer\"\r\n  //       >\r\n  //         Learn React\r\n  //       </a>\r\n  //     </header>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\nexport default App;","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\reportWebVitals.js",[],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\search.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import React, { Component, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport search from './search.svg';\r\nimport './App.css';\r\nimport AutoCompleteSearchBox from './src/AutoCompleteSearchBox';\r\nimport AutoCompleteSearchBoxLogin from './AutoCompleteSearchBoxLogin';\r\nimport Scanner from './src/BarcodeScanner';\r\nimport { stocksData } from './data/stocks'\r\nimport firebase from \"firebase/app\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport styled from \"styled-components\";\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18n from \"i18next\";\r\nimport Lottie from 'react-lottie';\r\nimport thumbsUp from './856-thumbs-up-grey-blue.json';\r\n\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\n\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: thumbsUp,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\"\r\n  }\r\n};\r\n\r\nconst DropDownContainer = styled(\"div\")`\r\n  width: 20em;\r\n  margin: 0 auto;\r\n  align: centre;\r\n`;\r\n\r\nconst DropDownHeader = styled(\"div\")`\r\n  margin-bottom: 0.8em;\r\n  padding: 0.4em 2em 0.4em 1em;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\r\n  font-weight: 350;\r\n  font-size: 1.3rem;\r\n  color: #000000;\r\n  background: #f6f6f6;\r\n`;\r\n\r\nconst DropDownHeaderEvent = styled(\"div\")`\r\n  margin-bottom: 0.8em;\r\n  padding: 0.4em 2em 0.4em 1em;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\r\n  font-weight: 350;\r\n  font-size: 1.3rem;\r\n  color: #000000;\r\n  background: #f6f6f6;\r\n  text-align: left;\r\n`;\r\n\r\nconst Container = styled(\"div\")`\r\n`;\r\n\r\nconst DropDownListContainer = styled(\"div\")`\r\n  max-height:200px;\r\n  overflow:scroll;\r\n`;\r\n\r\n// const DropDownListContainer = styled(\"div\")``;\r\n\r\nconst DropDownList = styled(\"ul\")`\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-left: 1em;\r\n  background: #f6f6f6;\r\n  border: 1px solid #000000;\r\n  box-sizing: border-box;\r\n  color: #000000;\r\n  font-size: 1rem;\r\n  font-weight: 350;\r\n  &:first-child {\r\n    padding-top: 0.8em;\r\n  }\r\n`;\r\n\r\nconst DropDownListEvent = styled(\"ul\")`\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-left: 1em;\r\n  background: #f6f6f6;\r\n  border: 1px solid #000000;\r\n  box-sizing: border-box;\r\n  color: #000000;\r\n  font-size: 1rem;\r\n  font-weight: 350;\r\n  &:first-child {\r\n    padding-top: 0.8em;\r\n  }\r\n  text-align: left;\r\n`;\r\n\r\nconst ListItem = styled(\"li\")`\r\n  list-style: none;\r\n  margin-bottom: 0.8em;\r\n`;\r\n\r\n\r\nconst button = {\r\n  color: \"#00008E\",\r\n  backgroundColor: \"#f6f6f6\",\r\n  padding: \"10px\",\r\n  fontFamily: \"Arial\"\r\n};\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApR69k8Oyt0PLCJQSJfHbhBH4aspxtCXQ\",\r\n  authDomain: \"pams-e7971.firebaseapp.com\",\r\n  databaseURL: \"https://pams-e7971.firebaseio.com\",\r\n  projectId: \"pams-e7971\",\r\n  storageBucket: \"pams-e7971.appspot.com\",\r\n  messagingSenderId: \"821251191711\",\r\n  appId: \"1:821251191711:web:dd4ce38f4dca3eb45d03aa\"\r\n};\r\nvar backspace_count = 0;\r\nfunction handleEnter(event) {\r\n  const form = event.target.form;\r\n  const index = Array.prototype.indexOf.call(form, event.target);\r\n  //console.log(index)\r\n  \r\n  console.log(\"before if\" + backspace_count);\r\n  if (event.target.value.length === event.target.maxLength) {\r\n    if (index < 3 ){\r\n      const form = event.target.form;\r\n      console.log(event.target.maxLength);\r\n      console.log(event.target.value.length);\r\n      form.elements[index + 1].focus();\r\n      event.preventDefault();\r\n      backspace_count = 0;\r\n    }\r\n  }\r\n  else if (event.keyCode == 8){\r\n    console.log(\"backspace pressed\");\r\n    backspace_count = backspace_count + 1;\r\n    console.log(\"backspace_count=\"+backspace_count);\r\n    if(index != 0 && backspace_count > 1 && event.target.value.length == 0){\r\n      console.log(\"inside bck codtion\");\r\n      form.elements[index - 1].focus();\r\n      // event.preventDefault();\r\n      backspace_count = 0;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userData: [],\r\n      selectedUsers: [],\r\n      selectedDate: new Date(),\r\n      eventList: [],\r\n      dayTimeList: ['Morning', 'Evening'],\r\n      isOpen: false,\r\n      isOpenDayTime: false,\r\n      selectedEvent: null,\r\n      selectedDayTime: null,\r\n      submitSuccess: false,\r\n\r\n      userName: null,\r\n      selectedDOY: null,\r\n      isOpenDOY: false,\r\n      yearList: [],\r\n      login: false,\r\n      isMPGCoordinator: false,\r\n      year1: null,\r\n      year2: null,\r\n      year3: null,\r\n      year4: null\r\n    };\r\n    this.submitAttendance = this.submitAttendance.bind(this);\r\n    this.login = this.login.bind(this);\r\n    for (let i = 2003; i > 1900; --i)\r\n      this.state.yearList.push(i);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n\r\n  login() {\r\n    if (this.state.userName == null) {\r\n      alert(\"Please select a valid UID\")\r\n      return\r\n    }\r\n\r\n    // if(this.state.selectedDOY == null)\r\n    // {\r\n    //   alert(\"Please select a valid year of date\")\r\n    //   return\r\n    // }\r\n    if (this.state.year1 == null) {\r\n      alert(\"Please select a valid year of date\")\r\n      return\r\n    }\r\n    if (this.state.year2 == null) {\r\n      alert(\"Please select a valid year of date\")\r\n      return\r\n    }\r\n    if (this.state.year3 == null) {\r\n      alert(\"Please select a valid year of date\")\r\n      return\r\n    }\r\n    if (this.state.year4 == null) {\r\n      alert(\"Please select a valid year of date\")\r\n      return\r\n    }\r\n\r\n\r\n    // console.log(this.state.selectedDOY, this.state.userName)\r\n\r\n    // // Initialize Firebase\r\n    // if (!firebase.apps.length) {\r\n    //   firebase.initializeApp(firebaseConfig);\r\n    // }else {\r\n    //   firebase.app(); // if already initialized, use that one\r\n    // }\r\n    // // const formattedDOB = (\"0\" + this.state.dateOfBirth.getDate()).slice(-2) + \"-\" + this.state.dateOfBirth.toLocaleString('default', { month: 'long' }) + \"-\" + this.state.dateOfBirth.getFullYear()\r\n\r\n    // // console.log(formattedDOB, this.state.userName)\r\n    // // todo function to complete\r\n\r\n    if (String(this.state.userName.dobYear) == this.state.year1 + this.state.year2 + this.state.year3 + this.state.year4) {\r\n      // console.log(\"user\", \"isMPGCoordinator\" in this.state.userName)\r\n      // console.log(\"isMPGCoordinator\", this.state.userName.isMPGCoordinator)\r\n\r\n      if ((\"in_dayalbagh\" in this.state.userName) && (this.state.userName.in_dayalbagh === true)) {\r\n        // console.log(\"you are here\")\r\n        this.setState({\r\n          login: true\r\n        })\r\n\r\n      }\r\n      else {\r\n        // console.log(\"you shouldn't be here\")\r\n        let tempEventList = this.state.eventList\r\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Evening Satsang\"), 1)\r\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Health Care PT\"), 1)\r\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh March Past\"), 1)\r\n        tempEventList.splice(tempEventList.indexOf(\"Dayalbagh Morning Satsang\"), 1)\r\n\r\n        if (!((\"is_core_team\" in this.state.userName) && (this.state.userName.is_core_team === true))) {\r\n          tempEventList.splice(tempEventList.indexOf(\"Evening Branch eSatsang\"), 1)\r\n          tempEventList.splice(tempEventList.indexOf(\"Morning Branch eSatsang\"), 1)\r\n\r\n        }\r\n        this.setState({\r\n          login: true,\r\n          eventList: tempEventList\r\n        })\r\n      }\r\n      // console.log(\"state\", this.state)\r\n    }\r\n    else {\r\n      alert(\"Invalid credentials\")\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  handleYear1Change = (event) => {\r\n    this.setState({\r\n      year1: event.target.value\r\n    })\r\n  }\r\n\r\n  handleYear2Change = (event) => {\r\n    this.setState({\r\n      year2: event.target.value\r\n    })\r\n  }\r\n\r\n  handleYear3Change = (event) => {\r\n    this.setState({\r\n      year3: event.target.value\r\n    })\r\n  }\r\n\r\n  handleYear4Change = (event) => {\r\n    this.setState({\r\n      year4: event.target.value\r\n    })\r\n  }\r\n\r\n  submitAttendance = async () => {\r\n    if (this.state.submitSuccess) {\r\n      return\r\n    }\r\n    if (this.state.selectedEvent == null) {\r\n      alert(\"Please select a valid event\")\r\n      return\r\n    }\r\n\r\n    if (this.state.selectedUsers.length == 0) {\r\n      alert(\"Please select attendees\")\r\n      return\r\n    }\r\n    // console.log(this.state.selectedDate, this.state.selectedEvent, this.state.selectedUsers)\r\n\r\n    // Initialize Firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n      await firebase.auth()\r\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\r\n        // .then((data) => console.log(data))\r\n        .catch(error => console.log(error))\r\n\r\n    } else {\r\n      firebase.app(); // if already initialized, use that one\r\n      await firebase.auth()\r\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\r\n        // .then((data) => console.log(data))\r\n        .catch(error => console.log(error))\r\n    }\r\n    const attendanceDate = (\"0\" + this.state.selectedDate.getDate()).slice(-2) + \"-\" + this.state.selectedDate.toLocaleString('default', { month: 'long' }) + \"-\" + this.state.selectedDate.getFullYear()\r\n    // console.log(attendanceDate)\r\n    this.state.selectedUsers.forEach((user) => {\r\n      user.attendanceMarkedByUID = this.state.userName.newUID\r\n      user.attendanceMarkedByName = this.state.userName.nameSatsangi\r\n      user.activityName = this.state.selectedEvent\r\n      user.datePresent = attendanceDate\r\n      let currentTimestamp = new Date()\r\n      user.timestamp = currentTimestamp.getDate() + '-' + (currentTimestamp.getMonth() + 1) + '-' + currentTimestamp.getFullYear() + \" \" + currentTimestamp.getHours() + \":\" + currentTimestamp.getMinutes() + \":\" + currentTimestamp.getSeconds();\r\n\r\n      console.log(user)\r\n      firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + user.newUID).set(user)\r\n      firebase.database().ref('satsangiUsers-attendance/' + this.state.selectedEvent + \"/\" + user.branchCode + \"/\" + attendanceDate).set(user)\r\n    })\r\n    // firebase.database().ref('satsangiUsers-attendance/' + attendanceDate + \"/\" + this.state.selectedEvent + \"/\" + this.state.sele)\r\n    console.log(\"attendance submitted\")\r\n    this.setState({ submitSuccess: true })\r\n    //alert(this.props.t('submit_message'))\r\n\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 3000)\r\n  }\r\n\r\n  fetchData = async () => {\r\n\r\n    // Initialize Firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n      await firebase.auth()\r\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\r\n        //.then((data) => console.log(data))\r\n        .catch(error => console.log(error))\r\n\r\n    } else {\r\n\r\n      firebase.app(); // if already initialized, use that one\r\n      await firebase.auth()\r\n        .signInWithEmailAndPassword(\"individualattendanceapp@gmail.com\", \"hjklvbnmuiop\")\r\n        //.then((data) => console.log(data))\r\n        .catch(error => console.log(error))\r\n    }\r\n    const users = await firebase.database().ref('/satsangiUsers/').once('value').then((snapshot) => {\r\n      return snapshot.val()\r\n    })\r\n    this.setState({\r\n      userData: users\r\n    });\r\n\r\n    const eventListFromFirebase = await firebase.database().ref('/activities/').once('value').then((snapshot) => {\r\n      return snapshot.val()\r\n    })\r\n    this.setState({\r\n      eventList: Object.keys(eventListFromFirebase)\r\n    });\r\n\r\n  }\r\n\r\n  handleOnCLick = (lang) => {\r\n    //store the lang in local storage\r\n    //on button click get the lang from localstorage and then change the lang\r\n    localStorage.setItem(\"currentLanguage\", lang)\r\n    //localStorage.getItem(\"currentLanguage\")\r\n    //redux-->local storage\r\n    i18n.changeLanguage(lang)\r\n  }\r\n\r\n  updateEvetToggle = () => {\r\n    if (this.state.isOpen) {\r\n      this.setState({ isOpen: false })\r\n    } else { return }\r\n  }\r\n\r\n  updateEvetToggleDOY = () => {\r\n    if (this.state.isOpenDOY) {\r\n      this.setState({ isOpenDOY: false })\r\n    } else { return }\r\n  }\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const onClick = (selectedUsers) => {\r\n      this.setState({ selectedUsers: selectedUsers })\r\n    }\r\n\r\n    const onLoginClick = (selectedUsers) => {\r\n      this.setState({ userName: selectedUsers })\r\n    }\r\n\r\n    // console.log(this.state.userData)\r\n    const toggling = () => this.setState({ isOpen: !this.state.isOpen });\r\n    const toggling_DOY = () => this.setState({ isOpenDOY: !this.state.isOpenDOY });\r\n\r\n    const togglingDayTime = () => this.setState({ isOpenDayTime: !this.state.isOpenDayTime });\r\n\r\n    const onOptionClicked = (value) => () => {\r\n      this.setState({ selectedEvent: value });\r\n      this.setState({ isOpen: false })\r\n      // console.log(this.state.selectedEvent);\r\n    };\r\n\r\n    const onOptionDayTimeClicked = (value) => () => {\r\n      this.setState({ selectedDayTime: value });\r\n      this.setState({ isOpenDayTime: false })\r\n    }\r\n\r\n    const onOptionClickedYOB = (value) => () => {\r\n      this.setState({ selectedDOY: value });\r\n      this.setState({ isOpenDOY: false })\r\n      // console.log(this.state.selectedDOY);\r\n    };\r\n\r\n\r\n    //console.log(\"sumsa ki jai\",this.props.t('Welcome_to_React'))\r\n\r\n    if (this.state.login == true)\r\n      return (\r\n        <div className=\"App\">\r\n          <Container onClick={this.updateEvetToggle}>\r\n            <button onClick={() => this.handleOnCLick(\"en\")}>English</button>\r\n            <button onClick={() => this.handleOnCLick(\"hi\")}>Hindi</button>\r\n            <h1>{t(\"Satsangis_Attendance\")}</h1>\r\n            <h2>{t(\"Radhasoami\")} {this.state.userName.nameSatsangi}</h2>\r\n            <div>\r\n              <h3>{t(\"Choose_date\")}</h3>\r\n              <DatePicker\r\n                selected={this.state.selectedDate}\r\n                onChange={date => this.setState({ selectedDate: date })}\r\n                dateFormat='dd/MM/yyyy'\r\n                disabled={true}\r\n              />\r\n            </div>\r\n            {/* <div>\r\n              <h3>{t(\"Choose_day_time\")}</h3>\r\n              <DropDownContainer>\r\n                <DropDownHeader onClick={togglingDayTime}>\r\n                  {this.state.selectedDayTime || \"Daytime\"}\r\n                </DropDownHeader>\r\n                {this.state.isOpenDayTime && (\r\n                  <DropDownListContainer>\r\n                    <DropDownList>\r\n                      {this.state.dayTimeList.map((dayTime) => (\r\n                        <ListItem onClick={onOptionDayTimeClicked(dayTime)} key={Math.random()}>\r\n                          {dayTime}\r\n                        </ListItem>\r\n                      ))}\r\n                    </DropDownList>\r\n                  </DropDownListContainer>\r\n                )}\r\n              </DropDownContainer>\r\n            </div> */}\r\n            <div>\r\n              <h3>{t(\"Choose_event\")}</h3>\r\n              <DropDownContainer>\r\n                <DropDownHeaderEvent onClick={toggling}>\r\n                  {this.state.selectedEvent || \"Event\"}\r\n                </DropDownHeaderEvent>\r\n                {this.state.isOpen && (\r\n                  <DropDownListContainer>\r\n                    <DropDownListEvent>\r\n                      {this.state.eventList.map((event) => (\r\n                        <ListItem onClick={onOptionClicked(event)} key={Math.random()}>\r\n                          {event}\r\n                        </ListItem>\r\n                      ))}\r\n                    </DropDownListEvent>\r\n                  </DropDownListContainer>\r\n                )}\r\n              </DropDownContainer>\r\n            </div>\r\n            <div>\r\n              <Scanner/>\r\n            </div>\r\n            <div>\r\n              <h3>{t(\"Choose_user\")}</h3>\r\n              <p>{t(\"Total_attendees\")} - {this.state.selectedUsers.length}</p>\r\n              <AutoCompleteSearchBox\r\n                placeHolderSearchLabel={\"Search..\"}\r\n                primaryIndex={\"nameSatsangi\"}\r\n                secondaryIndex={\"newUID\"}\r\n                showSecondarySearchCriterion={true}\r\n                secondarySearchClassName=\"secondarySearchClassName\"\r\n                tertiaryIndex={\"branchCode\"}\r\n                showTertiarySearchCriterion={true}\r\n                tertiarySearchClassName=\"tertiarySearchClassName\"\r\n                suggestions={Object.values(this.state.userData)}\r\n                onClick={onClick}\r\n                showSearchBtn={true}\r\n                searchImg={search}\r\n              />\r\n            </div>\r\n            {this.state.submitSuccess ? <div>\r\n              <div>{t(\"submit_message\")}</div>\r\n              <Lottie options={defaultOptions}\r\n                height={20}\r\n                width={20} />\r\n            </div>\r\n              : null}\r\n            <div>\r\n              <br></br>\r\n              <button onClick={this.submitAttendance} style={button}>\r\n                {t(\"Submit_Attendance\")}\r\n              </button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div className=\"App\">\r\n          <Container onClick={this.updateEvetToggleDOY}>\r\n            <button onClick={() => this.handleOnCLick(\"en\")}>English</button>\r\n            <button onClick={() => this.handleOnCLick(\"hi\")}>Hindi</button>\r\n            <h1>Satsangis Attendance </h1>\r\n            <div>\r\n              <h3>{t(\"Choose_UID\")}</h3>\r\n              <AutoCompleteSearchBoxLogin\r\n                placeHolderSearchLabel={\"Search..\"}\r\n                primaryIndex={\"nameSatsangi\"}\r\n                secondaryIndex={\"newUID\"}\r\n                showSecondarySearchCriterion={true}\r\n                secondarySearchClassName=\"secondarySearchClassName\"\r\n                tertiaryIndex={\"branchCode\"}\r\n                showTertiarySearchCriterion={true}\r\n                tertiarySearchClassName=\"tertiarySearchClassName\"\r\n                suggestions={Object.values(this.state.userData)}\r\n                onClick={onLoginClick}\r\n                showSearchBtn={true}\r\n                searchImg={search}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <h3>{t(\"Choose_Year_of_Birth\")}</h3>\r\n              {/* <DropDownContainer>\r\n                <DropDownHeader onClick={toggling_DOY}>\r\n                  {this.state.selectedDOY || \"Year\"}\r\n                </DropDownHeader>\r\n                {this.state.isOpenDOY && (\r\n                  <DropDownListContainer>\r\n                    <DropDownList>\r\n                      {this.state.yearList.map((event) => (\r\n                        <ListItem onClick={onOptionClickedYOB(event)} key={Math.random()}>\r\n                          {event}\r\n                        </ListItem>\r\n                      ))}\r\n                    </DropDownList>\r\n                  </DropDownListContainer>\r\n                )}\r\n              </DropDownContainer> */}\r\n\r\n              <form>\r\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year1} onChange={this.handleYear1Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\r\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year2} onChange={this.handleYear2Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\r\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year3} onChange={this.handleYear3Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter} />\r\n                <input style={{ width: \"10px\", color: \"black\" }} value={this.state.year4} onChange={this.handleYear4Change} maxLength=\"1\" inputmode=\"numeric\" pattern=\"\\d[1]\" onKeyUp={handleEnter}/>\r\n              </form>\r\n              <h7>{t(\"Example\")}:1950</h7>\r\n            </div>\r\n            <div>\r\n              <br></br>\r\n              <button onClick={this.login} style={button}>\r\n                {t(\"Login\")}\r\n              </button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n\r\n\r\n      );\r\n\r\n\r\n  }\r\n}\r\nexport default withTranslation()(SearchBar);\r\n","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\AutoCompleteSearchBox.js",["71","72","73"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n//import Chip from '@material-ui/core/Chip';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Chip from './Chips'\r\n\r\nconst StyledNoSuggsDiv = styled.div`\r\n    color: #999;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n \r\n position: relative;\r\n\r\n input{\r\n  width:100%;\r\n  height:45px;\r\n  border:0px solid black;\r\n  border-radius: 0px;\r\n  padding:0px 5px 0 10px;\r\n  font-size: 0.75rem;\r\n  background: #f6f6f6;\r\n  margin:5px 5px 5px 5px;\r\n}\r\n\r\n input:focus{\r\n  outline: none !important;\r\n}\r\n\r\n button{\r\n  position:absolute;\r\n  right:-5px;\r\n  top:15px;\r\n  border: none;\r\n  background: none;\r\n}\r\n img{\r\n  border-style: none;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n\r\n`;\r\nconst StyledUl = styled.ul`\r\n\r\n  border: 1px solid #999;\r\n  border-top-width: 0;\r\n  list-style: none;\r\n  margin-top: 0;\r\n  width:100%;\r\n  overflow-y: auto;\r\n  padding-left: 0;\r\n  color:${props => props.fontColor};\r\n\r\n\r\nli {\r\n  padding: 0.5rem;\r\n  list-style-type: none;\r\n  list-style: none;\r\n}\r\n\r\n.suggestion-active,li:hover \r\n{\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  background-color: aliceblue;\r\n  border:0px solid gray;\r\n  padding:4px 4px 4px 4px;\r\n  margin:5px 5px 5px 5px;\r\n  font-weight: bold;\r\n  background-color: coral;\r\n\r\n\r\n}\r\n\r\nli:not(:last-of-type) {\r\n  border-bottom: 1px solid #999;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst defaultProps = {\r\n    placeHolderSearchLabel:\"Search\",\r\n    showSearchBtn:false,\r\n    styles: {\r\n        ulDiv:{\r\n            color:\"blue\"\r\n        },\r\n        searchImage: {\r\n            width: \"24\",\r\n            height: \"24\",\r\n            alt: \"Search\"\r\n        },\r\n        container: {\r\n            width: \"400px\",\r\n            margin: \"0 auto\"\r\n        },\r\n    }\r\n}\r\n\r\n\r\nclass AutoCompleteSearchBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filteredSuggestions: [],\r\n            activeSuggestions: 0,\r\n            showSuggestions: false,\r\n            userInput: \"\",\r\n            selectedUsers: []\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        // console.log(e)\r\n        const { suggestions, primaryIndex } = this.props;\r\n        const userSearchInput = e.target.value;\r\n\r\n        const filteredSuggestions = suggestions.filter((suggestion) => {\r\n            return (suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1);\r\n        });\r\n\r\n        // console.log(filteredSuggestions);\r\n\r\n        this.setState({\r\n            filteredSuggestions: filteredSuggestions,\r\n            activeSuggestions: 0,\r\n            showSuggestions: true,\r\n            userInput: userSearchInput\r\n        })\r\n\r\n    }\r\n\r\n    onKeyDown(e) {\r\n\r\n        const { activeSuggestions, filteredSuggestions } = this.state;\r\n\r\n        if (e.keyCode === 13) {\r\n\r\n            this.setState({\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\r\n            })\r\n\r\n            this.props.onClick(filteredSuggestions[activeSuggestions]);\r\n        }\r\n        //user has clicked down arrow\r\n        else if (e.keyCode == 40) {\r\n\r\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\r\n        }\r\n        //user has clicked up arrow\r\n        else if (e.keyCode == 38) {\r\n            if (activeSuggestions === 0) {\r\n                return;\r\n            }\r\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onClick(e) {\r\n        if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\r\n            this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\r\n        }\r\n        // console.log('user input list')\r\n        // console.log(this.state.selectedUsers)\r\n        this.setState({\r\n            userInput: \"\"\r\n        })\r\n        this.props.onClick(this.state.selectedUsers);\r\n    }\r\n\r\n    onDelete(user) {\r\n        const index = this.state.selectedUsers.indexOf(user);\r\n        if (index > -1) {\r\n            this.state.selectedUsers.splice(index, 1)\r\n            // console.log('after delete')\r\n            // console.log(this.state.selectedUsers)\r\n            this.setState({\r\n                userInput: \"\"\r\n            })\r\n          }\r\n        this.props.onClick(this.state.selectedUsers);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                filteredSuggestions,\r\n                activeSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\r\n\r\n        let autoCompleteSuggestions;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                autoCompleteSuggestions = (\r\n                    <StyledUl fontColor={styles.ulDiv.color}>\r\n                        {\r\n                            filteredSuggestions.map((suggestion, index) => {\r\n\r\n                                let className;\r\n\r\n                                if (index === activeSuggestions) {\r\n                                    className = \"suggestion-active\";\r\n                                }\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={className}\r\n                                        key={index}\r\n                                        onClick={this.onClick}\r\n                                        data-id={index}\r\n                                        >\r\n                                        {suggestion[primaryIndex]}\r\n                                        \r\n                                        \r\n                                        <br />\r\n                                        <span>\r\n                                            {\r\n                                                this.props.showSecondarySearchCriterion ?\r\n                                                    <small>{suggestion[secondaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                            {/* {\r\n                                                this.props.showTertiarySearchCriterion ?\r\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\r\n                                                    null\r\n                                            } */}\r\n                                        </span>\r\n\r\n                                    </li>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </StyledUl>\r\n                )\r\n            }\r\n            else\r\n            {\r\n               \r\n                    autoCompleteSuggestions = (\r\n                        <StyledNoSuggsDiv>\r\n                          <em>No suggestions, you're on your own!</em>\r\n                        </StyledNoSuggsDiv>\r\n                      );\r\n                \r\n            }\r\n        }\r\n        return (\r\n\r\n            <div style={styles.container}>\r\n                <StyledContainer>\r\n                <div>\r\n                    {this.state.selectedUsers.map((user, index) => (\r\n                        <Chip \r\n                            label={user.nameSatsangi}\r\n                            onDelete={() => this.onDelete(user)}\r\n                        />\r\n                    ))}          \r\n                    </div>\r\n                    <input\r\n                        placeholder={this.props.placeHolderSearchLabel}\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyDown}\r\n                        value={userInput}\r\n                    />\r\n\r\n                    \r\n                </StyledContainer>\r\n                {autoCompleteSuggestions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAutoCompleteSearchBox.defaultProps = defaultProps;\r\nexport default AutoCompleteSearchBox\r\n","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\AutoCompleteSearchBoxLogin.js",["74","75","76","77","78","79"],"import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n//import Chip from '@material-ui/core/Chip';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst StyledNoSuggsDiv = styled.div`\r\n    color: #999;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nconst StyledContainer = styled.div`\r\n \r\n position: relative;\r\n\r\n input{\r\n  width:100%;\r\n  height:45px;\r\n  border:0px solid black;\r\n  border-radius: 0px;\r\n  padding:0px 5px 0 10px;\r\n  font-size: 0.75rem;\r\n  background: #f6f6f6;\r\n  margin:5px 5px 5px 5px;\r\n}\r\n\r\n input:focus{\r\n  outline: none !important;\r\n}\r\n\r\n button{\r\n  position:absolute;\r\n  right:-5px;\r\n  top:15px;\r\n  border: none;\r\n  background: none;\r\n}\r\n img{\r\n  border-style: none;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n\r\n`;\r\nconst StyledUl = styled.ul`\r\n\r\n  border: 1px solid #999;\r\n  border-top-width: 0;\r\n  list-style: none;\r\n  margin-top: 0;\r\n  width:100%;\r\n  overflow-y: auto;\r\n  padding-left: 0;\r\n  color:${props => props.fontColor};\r\n\r\n\r\nli {\r\n  padding: 0.5rem;\r\n  list-style-type: none;\r\n  list-style: none;\r\n}\r\n\r\n.suggestion-active,li:hover \r\n{\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  background-color: aliceblue;\r\n  border:0px solid gray;\r\n  padding:4px 4px 4px 4px;\r\n  margin:5px 5px 5px 5px;\r\n  font-weight: bold;\r\n  background-color: coral;\r\n\r\n\r\n}\r\n\r\nli:not(:last-of-type) {\r\n  border-bottom: 1px solid #999;\r\n}\r\n\r\n`;\r\n\r\n\r\nconst defaultProps = {\r\n    placeHolderSearchLabel:\"Search\",\r\n    showSearchBtn:false,\r\n    styles: {\r\n        ulDiv:{\r\n            color:\"blue\"\r\n        },\r\n        searchImage: {\r\n            width: \"24\",\r\n            height: \"24\",\r\n            alt: \"Search\"\r\n        },\r\n        container: {\r\n            width: \"400px\",\r\n            margin: \"0 auto\"\r\n        },\r\n    }\r\n}\r\n\r\n\r\nclass AutoCompleteSearchBoxLogin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filteredSuggestions: [],\r\n            activeSuggestions: 0,\r\n            showSuggestions: false,\r\n            userInput: \"\",\r\n            selectedUsers: null\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        // console.log(e)\r\n        const { suggestions, primaryIndex, secondaryIndex, tertiaryIndex } = this.props;\r\n        const userSearchInput = e.target.value;\r\n\r\n        const filteredSuggestions = suggestions.filter((suggestion) => {\r\n            return ((suggestion[primaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1) ||\r\n            ((suggestion[secondaryIndex]) && (suggestion[secondaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)) ||\r\n            ((suggestion[tertiaryIndex]) && (suggestion[tertiaryIndex].toLowerCase().indexOf(userSearchInput.toLowerCase()) > -1)));\r\n        });\r\n\r\n        // console.log(filteredSuggestions);\r\n\r\n        this.setState({\r\n            filteredSuggestions: filteredSuggestions,\r\n            activeSuggestions: 0,\r\n            showSuggestions: true,\r\n            userInput: userSearchInput\r\n        })\r\n\r\n    }\r\n\r\n    onKeyDown(e) {\r\n\r\n        const { activeSuggestions, filteredSuggestions } = this.state;\r\n\r\n        if (e.keyCode === 13) {\r\n\r\n            this.state.selectedUsers = filteredSuggestions[activeSuggestions]\r\n            this.setState({\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestions][this.props.secondaryIndex],\r\n                // selectedUsers: filteredSuggestions[activeSuggestions][this.props.primaryIndex]\r\n            })\r\n            console.log(this.state.selectedUsers)\r\n            this.props.onClick(this.state.selectedUsers);\r\n        }\r\n        //user has clicked down arrow\r\n        else if (e.keyCode == 40) {\r\n\r\n            if (activeSuggestions - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestions: activeSuggestions + 1 });\r\n        }\r\n        //user has clicked up arrow\r\n        else if (e.keyCode == 38) {\r\n            if (activeSuggestions === 0) {\r\n                return;\r\n            }\r\n            this.setState({ activeSuggestions: activeSuggestions - 1 });\r\n        }\r\n    }\r\n\r\n    onClick(e) {\r\n        this.state.selectedUsers = this.state.filteredSuggestions[e.currentTarget.dataset.id]\r\n        // if(this.state.selectedUsers.indexOf(this.state.filteredSuggestions[e.currentTarget.dataset.id]) === -1) {\r\n        //     this.state.selectedUsers.push(this.state.filteredSuggestions[e.currentTarget.dataset.id])\r\n        // }\r\n        // console.log('user input list')\r\n        // console.log(this.state.selectedUsers)\r\n        this.setState({\r\n            userInput: this.state.filteredSuggestions[e.currentTarget.dataset.id][this.props.secondaryIndex],\r\n            showSuggestions: false\r\n        })\r\n        console.log(this.state)\r\n        this.props.onClick(this.state.selectedUsers);\r\n    }\r\n\r\n    onDelete(user) {\r\n        this.setState({\r\n            userInput: \"\",\r\n            selectedUsers: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            state: {\r\n                filteredSuggestions,\r\n                activeSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        const { primaryIndex, secondaryIndex, tertiaryIndex, styles } = this.props;\r\n\r\n        let autoCompleteSuggestions;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                autoCompleteSuggestions = (\r\n                    <StyledUl fontColor={styles.ulDiv.color}>\r\n                        {\r\n                            filteredSuggestions.map((suggestion, index) => {\r\n\r\n                                let className;\r\n\r\n                                if (index === activeSuggestions) {\r\n                                    className = \"suggestion-active\";\r\n                                }\r\n\r\n                                return (\r\n                                    <li\r\n                                        className={className}\r\n                                        key={index}\r\n                                        onClick={this.onClick}\r\n                                        data-id={index}\r\n                                        >\r\n                                        {suggestion[primaryIndex]}\r\n                                        \r\n                                        \r\n                                        <br />\r\n                                        {/* <span>\r\n                                            {\r\n                                                this.props.showSecondarySearchCriterion ?\r\n                                                    <small>{suggestion[secondaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                this.props.showTertiarySearchCriterion ?\r\n                                                    <small className={this.props.tertiarySearchClassName}>{suggestion[tertiaryIndex]}</small> :\r\n                                                    null\r\n                                            }\r\n                                        </span> */}\r\n\r\n                                    </li>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </StyledUl>\r\n                )\r\n            }\r\n            else\r\n            {\r\n               \r\n                    autoCompleteSuggestions = (\r\n                        <StyledNoSuggsDiv>\r\n                          <em>No suggestions, you're on your own!</em>\r\n                        </StyledNoSuggsDiv>\r\n                      );\r\n                \r\n            }\r\n        }\r\n        return (\r\n\r\n            <div style={styles.container}>\r\n                <StyledContainer>\r\n                    <input\r\n                        placeholder={this.props.placeHolderSearchLabel}\r\n                        type=\"text\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyDown}\r\n                        value={userInput}\r\n                    />\r\n                </StyledContainer>\r\n                {autoCompleteSuggestions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAutoCompleteSearchBoxLogin.defaultProps = defaultProps;\r\nexport default AutoCompleteSearchBoxLogin\r\n","D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\data\\stocks.js",[],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Chips.js",["80","81","82","83"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport { HighlightOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px\",\r\n    color: \"black\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Chips(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleDelete = () => {\r\n    if (props.onDelete) {\r\n      props.onDelete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Chip label={props.label || \"\"} onDelete={() => handleDelete()} />\r\n    </div>\r\n  );\r\n}\r\n/*\r\n<Chip iconColorPrimary=\"secondary\" deleteIcon={<HighlightOff/>} label=\"Delete\" onDelete={handleDelete} color=\"secondary\" />*/\r\n",["84","85"],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\Scanner.js",[],"D:\\Personal\\Git repos\\satsangattendance\\satsangis-attendance\\src\\search_bar\\src\\BarcodeScanner.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":12},{"ruleId":"90","severity":1,"message":"94","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"96","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"97","line":1,"column":39,"nodeType":"92","messageId":"93","endLine":1,"endColumn":47},{"ruleId":"90","severity":1,"message":"98","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"100","line":10,"column":10,"nodeType":"92","messageId":"93","endLine":10,"endColumn":23},{"ruleId":"90","severity":1,"message":"101","line":38,"column":7,"nodeType":"92","messageId":"93","endLine":38,"endColumn":21},{"ruleId":"90","severity":1,"message":"102","line":69,"column":7,"nodeType":"92","messageId":"93","endLine":69,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":138,"column":26,"nodeType":"105","messageId":"106","endLine":138,"endColumn":28},{"ruleId":"103","severity":1,"message":"107","line":142,"column":14,"nodeType":"105","messageId":"106","endLine":142,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":142,"column":71,"nodeType":"105","messageId":"106","endLine":142,"endColumn":73},{"ruleId":"103","severity":1,"message":"104","line":232,"column":45,"nodeType":"105","messageId":"106","endLine":232,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":302,"column":41,"nodeType":"105","messageId":"106","endLine":302,"endColumn":43},{"ruleId":"90","severity":1,"message":"108","line":414,"column":11,"nodeType":"92","messageId":"93","endLine":414,"endColumn":23},{"ruleId":"90","severity":1,"message":"109","line":416,"column":11,"nodeType":"92","messageId":"93","endLine":416,"endColumn":26},{"ruleId":"90","severity":1,"message":"110","line":424,"column":11,"nodeType":"92","messageId":"93","endLine":424,"endColumn":33},{"ruleId":"90","severity":1,"message":"111","line":429,"column":11,"nodeType":"92","messageId":"93","endLine":429,"endColumn":29},{"ruleId":"103","severity":1,"message":"104","line":438,"column":26,"nodeType":"105","messageId":"106","endLine":438,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":158,"column":28,"nodeType":"105","messageId":"106","endLine":158,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":167,"column":28,"nodeType":"105","messageId":"106","endLine":167,"endColumn":30},{"ruleId":"90","severity":1,"message":"112","line":214,"column":47,"nodeType":"92","messageId":"93","endLine":214,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":152,"column":13,"nodeType":"115","endLine":152,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":162,"column":28,"nodeType":"105","messageId":"106","endLine":162,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":171,"column":28,"nodeType":"105","messageId":"106","endLine":171,"endColumn":30},{"ruleId":"113","severity":1,"message":"114","line":180,"column":9,"nodeType":"115","endLine":180,"endColumn":19},{"ruleId":"90","severity":1,"message":"116","line":212,"column":31,"nodeType":"92","messageId":"93","endLine":212,"endColumn":45},{"ruleId":"90","severity":1,"message":"112","line":212,"column":47,"nodeType":"92","messageId":"93","endLine":212,"endColumn":60},{"ruleId":"90","severity":1,"message":"117","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":14},{"ruleId":"90","severity":1,"message":"118","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":16},{"ruleId":"90","severity":1,"message":"119","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"90","severity":1,"message":"120","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":22},{"ruleId":"86","replacedBy":"121"},{"ruleId":"88","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useTranslation' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'stocksData' is defined but never used.","'ThemeProvider' is defined but never used.","'DropDownHeader' is assigned a value but never used.","'DropDownList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'toggling_DOY' is assigned a value but never used.","'togglingDayTime' is assigned a value but never used.","'onOptionDayTimeClicked' is assigned a value but never used.","'onOptionClickedYOB' is assigned a value but never used.","'tertiaryIndex' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'secondaryIndex' is assigned a value but never used.","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'HighlightOff' is defined but never used.",["123"],["124"],"no-global-assign","no-unsafe-negation"]